Name,URL,Volume,Ring,Quadrant,shorturl,Description
Aleph.js,https://www.thoughtworks.com/radar/languages-and-frameworks/aleph-js,Oct-22,Assess,Languages & Frameworks,https://tinyurl.com/2pawh2eu,"There is certainly no shortage of frameworks to build web applications in JavaScript/ TypeScript . We've featured many of them in the Radar, but what sets  Aleph.js  apart in this crowded field is that it's built to run on  Deno , the new server-side run time created by the original developer of  Node . This puts Aleph.js on a modern foundation that addresses several shortcomings and problems with Node. Aleph.js is still new "" it's approaching the 1.0 release at the time of writing "" but it already offers a solid developer experience, including hot module replacement. With Deno now way past its  1.0 release , this is a modern choice for projects that can take the risk."
Apache Superset,https://www.thoughtworks.com/radar/tools/apache-superset,Oct-22,Trial,Tools,https://tinyurl.com/2hkz9jql,"Apache Superset  is a great business intelligence (BI) tool for data exploration and visualization to work with large data lake and data warehouse setups. It supports several  data sources  "" including AWS Redshift,  BigQuery , Azure MS SQL,  Snowflake  and  ClickHouse . Moreover, you don't have to be a data engineer to use it; it's meant to benefit all engineers exploring data in their everyday work. For demanding use cases, we found it easy to scale Superset by deploying it in a  Kubernetes  cluster. Since we last talked about it in the Radar, Superset has graduated as an Apache product, and we've seen great success in several projects."
Astro,https://www.thoughtworks.com/radar/languages-and-frameworks/astro,Oct-22,Assess,Languages & Frameworks,https://tinyurl.com/2ft9vadn,"It's hard to believe, but in 2022, the developer community continues to pump out interesting new frameworks for building web applications.  Astro  is a recent, open-source, multi-page application framework that renders HTML on the server and minimizes the amount of JavaScript sent over the wire. Astro seems particularly well-suited to content-oriented websites that pull from many different sources. We like the fact that although Astro encourages sending only HTML, it still supports "" when appropriate "" select active components written in the front-end JavaScript framework of your choice. It does this through its  island architecture . Islands are regions of interactivity within a single page where the necessary JavaScript is downloaded only when needed. Astro is relatively new but seems to support a growing ecosystem of developers and code. It's one to watch as it develops."
AWS Backup Vault Lock,https://www.thoughtworks.com/radar/tools/aws-backup-vault-lock,Oct-22,Trial,Tools,https://tinyurl.com/2f2szg4f,"When implementing robust, secure and reliable disaster recovery, its necessary to ensure that backups can't be deleted or altered before their expiry, either maliciously or accidentally. Previously, with AWS Backup, these policies and guarantees had to be implemented by hand. Recently, AWS has added the Vault Lock feature to ensure backups are immutable and untamperable.  AWS Backup Vault Lock  enforces retention and deletion policies and prevents even those with administrator privileges from altering or deleting backup files. This has proved to be a valuable addition and fills a previously empty space."
AWS Control Tower,https://www.thoughtworks.com/radar/tools/aws-control-tower,Oct-22,Trial,Tools,https://tinyurl.com/2hmu2r5r,"Multi-team account management is a challenge in AWS, especially in setup and governance;  AWS Control Tower  is an attempt to address this challenge. Our team has reported good results using it to manage accounts and access control for multiple teams in the organization through a single, centralized place."
AWS Database Migration Service,https://www.thoughtworks.com/radar/platforms/aws-database-migration-service,Oct-22,Trial,Platforms,https://tinyurl.com/2pzcqxxh,"Many of our teams have successfully used  AWS Database Migration Service  (DMS) to migrate data to and from AWS. In one of our Digital Transformation engagements, we achieved nearly zero downtime cut-over to the new system as we migrated data from Microsoft SQL Server to an AWS Relational Database Service (RDS) PostgreSQL instance. Such transformations involve many moving parts that require planning and coordination across multidisciplinary teams, but for data migration we're quite happy with DMS. It automatically manages the deployment, management and monitoring of all required resources. Over the years DMS has matured to support several  source  and  target  databases, and we continue to like it."
Azure Bicep,https://www.thoughtworks.com/radar/languages-and-frameworks/azure-bicep,Oct-22,Trial,Languages & Frameworks,https://tinyurl.com/2z9lvt9d,"For those who prefer a more natural language than JSON for infrastructure code,  Azure Bicep  is a domain-specific language (DSL) that uses a declarative syntax and supports reusable parameterized templates for modular resource definitions. A  Visual Studio Code extension  provides instant type safety, intellisense and syntax checking, while the compiler allows bidirectional transpilation to and from Azure Resource Manager (ARM) templates. Bicep's resource-oriented DSL and native integration with the Azure ecosystem make it a compelling choice for Azure infrastructure development."
Backstage,https://www.thoughtworks.com/radar/platforms/backstage,Oct-22,Adopt,Platforms,https://tinyurl.com/2fqr6n5s,"In an increasingly digital world, improving developer effectiveness in large organizations is often a core concern of senior leaders. We've seen enough value with developer portals in general and  Backstage  in particular that we're happy to recommend it in Adopt. Backstage is an open-source developer portal platform created by Spotify that improves discovery of software assets across the organization. It uses Markdown  TechDocs  that live alongside the code for each service, which nicely balances the needs of centralized discovery with the need for distributed ownership of assets. Backstage supports software templates to accelerate new development and a plugin architecture that allows for extensibility and adaptability into an organization's infrastructure ecosystem.  Backstage Service Catalog  uses YAML files to track ownership and metadata for all the software in an organization's ecosystem; it even lets you track third-party SaaS software, which usually requires tracking ownership."
BentoML,https://www.thoughtworks.com/radar/languages-and-frameworks/bentoml,Oct-22,Assess,Languages & Frameworks,https://tinyurl.com/2l8syruf,"BentoML  is a python-first framework for serving machine-learning models in production at scale. The models it provides are agnostic of their environment; all model artifacts, source code and dependencies are encapsulated in a self-contained format called Bento. It's like having your model ""as a service."" Think of BentoML as the  Docker  for ML models: It generates VM images with pre-programmed APIs ready for deployment and includes features that make it easy to test these images. BentoML can help speed up the initial development effort by easing the start of projects which is why we included it in Assess."
BERT,https://www.thoughtworks.com/radar/techniques/bert,Oct-22,Trial,Techniques,https://tinyurl.com/2oum8er5,"Since we last talked about  BERT  (Bidirectional Encoder Representations from Transformers) in the Radar, our teams have successfully used it in a few natural language processing (NLP) projects. In one of our engagements, we observed significant improvements when we switched from the default BERT tokenizer to a domain-trained word-piece tokenizer for queries that contain nouns like brand names or dimensions. Although NLP has several new transformer models, BERT is well understood with good documentation and a vibrant community, and we continue to find it effective in an enterprise NLP context."
Bun,https://www.thoughtworks.com/radar/platforms/bun,Oct-22,Assess,Platforms,https://tinyurl.com/2mmhhh3x,"Bun  is a new JavaScript runtime, similar to  Node.js  or  Deno . Unlike Node.js or Deno, however, Bun is built using WebKit's JavaScriptCore instead of Chrome's V8 engine. Designed as a drop-in replacement for Node.js, Bun is a single binary (written in  Zig ) that acts as a bundler, transpiler and package manager for JavaScript and  TypeScript  applications. Bun is currently in beta, so expect bugs or compatibility issues with a few Node.js libraries. However, its been built from the ground up with several optimizations, including fast startup and improved server-side rendering, and we believe its worthwhile to assess."
Camunda,https://www.thoughtworks.com/radar/languages-and-frameworks/camunda,Oct-22,Trial,Languages & Frameworks,https://tinyurl.com/2kc35xvr,"Since we last mentioned  Camunda , we've seen many of our teams and clients use the platform, making it one of our preferred workflow engines in cases where a workflow engine is a good fit for the domain. Camunda offers workflow and decision engines that can be integrated as a library in your Java code. This makes it easy to test, version and refactor workflows, alleviating some of the downsides of other more low-code workflow engines. We've even seen Camunda used in environments with high performance requirements. Teams also like how easy it is to integrate with  Spring Boot  and its nice user interface."
Carbon,https://www.thoughtworks.com/radar/languages-and-frameworks/carbon,Oct-22,Hold,Languages & Frameworks,https://tinyurl.com/2gy4cykc,"We're seeing some interest in the  Carbon  programming language. That doesn't come as a surprise: it has Google's backing and is presented as a natural successor to C++. In our opinion C++ can't be replaced fast enough as software engineers have shown, over the past decades, that writing safe and error-free C++ code is extremely difficult and time-consuming. While Carbon is an interesting concept with its focus on migration from C++, without a working compiler, it's clearly a long way from being usable and there are other modern programming languages that are good choices if you want to migrate from C++. It's too early to tell whether Carbon will become the natural successor to C++, but, from today's perspective, we recommend that teams look at  Rust  and  Go  rather than postponing a migration because they're waiting for Carbon to arrive."
Carbon Aware SDK,https://www.thoughtworks.com/radar/languages-and-frameworks/carbon-aware-sdk,Oct-22,Assess,Languages & Frameworks,https://tinyurl.com/2qdq3jpz,"When looking at reducing the carbon footprint of an application "" the carbon dioxide emissions caused indirectly by running the software "" attention is usually directed at making the software more efficient. The thinking is clear: more efficient software needs less electricity and fewer servers, reducing the emissions from electricity generation and manufacturing of the servers. An additional strategy is to make the application  carbon aware . This is because the same workload does not always have the same carbon footprint. For example, when run in a data center in a cooler climate, less power for air conditioning is needed; or, when run at a time when more renewable energy is available (more sunshine, stronger winds), less electricity from carbon-based sources is required. With the  Carbon Aware SDK , software engineers can query data sources to discover less carbon-intensive options for a given workload and then move it to a different location or run it at a different time. This makes sense for large workloads that are neither time nor latency sensitive, such as training a machine-learning model. Although the SDK and available data sources are not very comprehensive yet, we believe it's time to start looking at how we can make our systems carbon aware."
Carbon efficiency as an architectural characteristic,https://www.thoughtworks.com/radar/techniques/carbon-efficiency-as-an-architectural-characteristic,Oct-22,Assess,Techniques,https://tinyurl.com/2fwamh7r,"Sustainability is a topic that demands the attention of enterprises. In the software development space its importance has increased, and we're now seeing  different ways  to approach this topic. Looking at the carbon footprint of building software, for example, we recommend assessing  carbon efficiency as an architectural characteristic . An architecture that takes into consideration carbon efficiency is one where design and infrastructure choices have been made in order to to minimize energy consumption and therefore carbon emissions. The measurement tooling and advice in this space is maturing, making it feasible for teams to consider carbon efficiency alongside other factors such as performance, scalability, financial cost and security. Like almost everything in software architecture, this should be considered a trade-off; our advice is to think about this as one additional characteristic in a whole set of relevant  quality attributes  that are driven and prioritized by organizational goals and not left to a small cadre of experts to ponder in a siloed manner."
Clasp,https://www.thoughtworks.com/radar/tools/clasp,Oct-22,Assess,Tools,https://tinyurl.com/2mhv2cqk,"Unfortunately, a big part of the world still runs on spreadsheets and will continue to do so. They're the ultimate tool to let anyone build those small custom tools tailored to their exact needs. However, when you want to enhance them with a level of logic that requires ""real"" code, the low-code nature of spreadsheets can then become a constraint. If you're with a company that, like Thoughtworks, uses Google's G-Suite,  Clasp  enables you to apply at least some  Continuous Delivery  practices to Apps Script code. You can write the code outside of the Apps Script project, which creates options for testing, source control and build pipelines; it even lets you use  TypeScript . Clasp has been around for a while, and you shouldnt expect a programming environment with all of the usual comforts, but it can greatly improve the experience of using Apps Script."
Cloudscape,https://www.thoughtworks.com/radar/languages-and-frameworks/cloudscape,Oct-22,Assess,Languages & Frameworks,https://tinyurl.com/2pyplbpm,"Cloudscape  is an open-source design system that not only has a rich set of components but also 35 interaction and content representation patterns. In addition, it uses  design tokens  for theming and provides element wrappers for all components, which greatly simplifies unit testing. This makes it stand out from other design systems out there."
Clumio Protect,https://www.thoughtworks.com/radar/tools/clumio-protect,Oct-22,Trial,Tools,https://tinyurl.com/2lkexbu2,"We've had success with  Clumio Protect  for backing up AWS data, particularly S3. A commercial SaaS solution, Clumio Protect can also back up a range of other AWS services and stores the data offline where it is not accessible through the internet. Our teams responsible for handling data protection and recovery at massive scale found that Clumio Protect is easy to set up and maintain and far outperforms the native AWS Backup service when S3 buckets are particularly big."
Colima,https://www.thoughtworks.com/radar/platforms/colima,Oct-22,Trial,Platforms,https://tinyurl.com/2g7tkhoh,"Colima  is becoming a popular open alternative to Docker Desktop. It provisions the  Docker  container run time in a Lima VM, configures the Docker CLI on macOS and handles port-forwarding and volume mounts. Colima uses  containerd  as its run time, which is also the run time on most managed  Kubernetes  services "" improving the important dev-prod parity. With Colima you can easily use and test the latest features of containerd, such as lazy loading for container images. We've been having good results with Colima in our projects. When in the Kubernetes space, we also use  nerdctl , a Docker-compatible CLI for containerd. Since Kubernetes has deprecated Docker as container run time and most managed-services (EKS, GKE, etc) are following its lead, more people will be looking to containerd native tools, hence the importance of tools like nerdctl. In our opinion, Colima is realizing its strong potential and becoming a go-to option as an alternative to Docker Desktop."
Component visual regression testing,https://www.thoughtworks.com/radar/techniques/component-visual-regression-testing,Oct-22,Trial,Techniques,https://tinyurl.com/2pcbcsjn,"Visual regression testing  is a useful and powerful tool to have in your toolbox, but it has a significant cost given it's done for the entire page. With the rise of component-based frameworks such as  React  and  Vue , we've also seen the rise of  component visual regression testing . This technique strikes a good balance between value and cost to ensure that no undesired visuals have been added to the application. In our experience, component visual regression testing presents fewer false positives and promotes a good architectural style. By using it with tools such as  Vite  and the webpack feature  Hot Module Replacement (HMR) , it could be seen as a paradigm shift for applying test-driven development to front-end development."
Connect,https://www.thoughtworks.com/radar/languages-and-frameworks/connect,Oct-22,Assess,Languages & Frameworks,https://tinyurl.com/2ffsenw3,"Connect  is a family of libraries for building browser- and gRPC-compatible HTTP APIs. Similar to gRPC, you write Protocol Buffer schema and implement the application logic, and Connect generates code to handle marshaling, routing, compression and content type negotiation. However, Connect tries to improve on gRPC in several ways. This includes native support for gRPC-Web without a translating proxy; interoperability with third-party routers or middleware, because  connect-go  is built on top of net/http (unlike grpc-go); and fully generated type-safe clients with the ergonomics of hand-crafted code. We mostly prefer REST and are not a big fan of the RPC approach to building APIs. That said, Connect does seem to address some of our concerns with RPCs, and we encourage you to assess it."
Cross device SDK,https://www.thoughtworks.com/radar/languages-and-frameworks/cross-device-sdk,Oct-22,Assess,Languages & Frameworks,https://tinyurl.com/2hjfuxzv,"As smart devices continue to embed themselves in our lives, we are starting to see new use cases emerge that span across multiple devices. The classic example is a text we start reading on a phone but prefer to finish on a tablet. Other examples include plotting a cycling route on a laptop and then transferring the data to a bike computer for easier navigation or using a mobile phone as a webcam. Such use cases require very specific kinds of features, like the discovery of nearby devices, secure communication and multi-device sessions. Apple started introducing such features a while ago to its own SDKs, and now Google has released the first preview of its  Cross device SDK . Although the preview has several limitations "" for example, only phones and tablets are supported and only two devices at a time "" the technology is exciting and can be utilized as it is rolled out over time."
Cruft,https://www.thoughtworks.com/radar/tools/cruft,Oct-22,Trial,Tools,https://tinyurl.com/2j3otxmy,"We've been talking about  tailored service templates  ever since we first identified  microservices  as a thing. If an organization sets out to create a collection of small services that can be developed, built, deployed and operated independently but consistently, it makes sense to give teams a solid starting point that aligns to the standard. However, one of the enduring problems with that approach is that as the template evolves over time in response to changing technical and business requirements, projects based on older versions of the template fall out of date. Retrofitting template improvements into an established project becomes a major pain.  Cruft  attempts to address this problem by providing tools to identify and patch differences between a local project and the current head of a master template repository. It combines the  Cookiecutter  templating engine with git hashes to identify and apply changes to the templates. Think of it as a package manager for a project boilerplate. Keeping templates up-to-date is a notoriously difficult and long-standing problem, so to us the solution Cruft provides sounds almost too good to be true. Based on early feedback from our team, however, Cruft actually works and makes life easier for service builders and maintainers. We're anxious to see how it performs over the long term, but for now it's worth taking a look at this potentially useful tool."
CUPID,https://www.thoughtworks.com/radar/techniques/cupid,Oct-22,Assess,Techniques,https://tinyurl.com/2pfgbj66,"How do you approach writing good code? How do you judge if you've written good code? As software developers, we're always looking for catchy rules, principles and patterns that we can use to share a language and values with each other when it comes to writing simple, easy-to-change code."
Cypress Component Testing,https://www.thoughtworks.com/radar/languages-and-frameworks/cypress-component-testing,Oct-22,Assess,Languages & Frameworks,https://tinyurl.com/2qxxcqq8,"Cypress Component Testing  provides a testable component workbench to quickly build and test UI components. You can write component visual regression tests with the same API that you write end-to-end (E2E) UI tests. Although still in beta, component testing will be the most important feature in  Cypress 10"
Databricks Overwatch,https://www.thoughtworks.com/radar/tools/databricks-overwatch,Oct-22,Assess,Tools,https://tinyurl.com/2dsg8ux3,"Databricks Overwatch  is a Databricks Labs project that enables teams to analyze various operational metrics of Databricks workloads around cost, governance and performance with support to run what-if experiments. It's essentially a set of data pipelines that populate tables in Databricks, which can then be analyzed using tools like notebooks. Overwatch is very much a power tool; however, it's still in its early stages and it may take some effort to set it up "" our use of it required Databricks solution architects to help set it up and populate a price reference table for cost calculations "" but we expect adoption to get easier over time. The level of analysis made possible by Overwatch is deeper than what is allowed by cloud providers' cost analysis tools. For example, we were able to analyze the cost of job failures "" recognizing that failing fast saves money compared to jobs that only fail near the final step "" and break down the cost by various groupings (workspace, cluster, job, notebook, team). We also appreciated the improved operational visibility, as we could easily audit access controls around cluster configurations and analyze operational metrics like finding the longest running notebook or largest read/write volume. Overwatch can analyze historical data, but its real-time mode allows for alerting which helps you to add appropriate controls to your Databricks workloads."
Databricks Photon,https://www.thoughtworks.com/radar/platforms/databricks-photon,Oct-22,Trial,Platforms,https://tinyurl.com/2hg4rbym,"Starting with Databricks 9.1 LTS (Long Term Support), a new run time became available called  Databricks Photon , an alternative that was rewritten from the ground up in C++. Several of our teams have now used Photon in production and have been pleased with the performance improvements and corresponding cost savings. Actual improvements and changes in costs will depend upon multiple factors such as data set size and transaction types. We recommend trialing against a realistic workload to gather data for a comparison before making any decision on Photon's use."
Databricks Unity Catalog,https://www.thoughtworks.com/radar/platforms/databricks-unity-catalog,Oct-22,Assess,Platforms,https://tinyurl.com/2qeu4ebv,"Databricks Unity Catalog  is a data governance solution for assets such as files, tables or machine learning models in a  lakehouse . Although you'll find several platforms in the enterprise data governance space, if you're already using other Databricks solutions, you should certainly assess Unity Catalog. We want to highlight that while these governance platforms usually implement a centralized solution for better consistency across workspaces and workloads, the responsibility to govern should be federated by enabling individual teams to govern their own assets."
DataHub,https://www.thoughtworks.com/radar/platforms/datahub,Oct-22,Trial,Platforms,https://tinyurl.com/2otqoeve,"Since we first mentioned  data discoverability  in the Radar, LinkedIn has evolved  WhereHows  to  DataHub , the next generation platform that addresses data discoverability via an extensible metadata system. Instead of crawling and pulling metadata, DataHub adopts a push-based model where individual components of the data ecosystem publish metadata via an API or a stream to the central platform. This push-based integration shifts ownership from the central entity to individual teams, making them accountable for their metadata. As a result, we've used DataHub successfully as an organization-wide metadata repository and entry point for multiple autonomously maintained data products. When taking this approach, be sure to keep it lightweight and avoid the slippery slope leading to centralized control over a shared resource."
DataOps.live,https://www.thoughtworks.com/radar/platforms/dataops-live,Oct-22,Trial,Platforms,https://tinyurl.com/2o2k4r2j,"DataOps.live  is a data platform that automates environments in  Snowflake . Inspired by  DevOps  practices, DataOps.live lets you treat the data platform like any other web platform by embracing continuous integration and continuous delivery (CI/CD), automated testing, observability and code management. You can roll back changes immediately without impacting the data or recover from complete failures and rebuild a fresh Snowflake tenant in minutes or hours instead of days. Our teams had good experiences with DataOps.live, because it allowed us to iterate quickly when building data products on top of Snowflake."
dbtvault,https://www.thoughtworks.com/radar/tools/dbtvault,Oct-22,Assess,Tools,https://tinyurl.com/2phakngj,"Data Vault 2.0  is a data modeling methodology and design pattern intended to improve the flexibility of data warehouses compared to other popular modeling approaches. Data Vault 2.0 can be applied to any data store such as  Snowflake  or  Databricks . When implementing Data Vault warehouses, we've found the  dbtvault  package for  dbt  to be a helpful tool. dbtvault provides a set of  jinja  templates that generate and execute the ETL scripts necessary to populate a Data Vault warehouse. Although dbtvault has some rough edges "" it lacks support for enforcing implied uniqueness or performing incremental loads "" overall, it fills a niche and requires minimal configuration to get started."
Delta Lake,https://www.thoughtworks.com/radar/platforms/delta-lake,Oct-22,Adopt,Platforms,https://tinyurl.com/2nac5flc,"Delta Lake  is an  open-source storage layer , implemented by Databricks, that attempts to bring ACID transactions to big data processing. In our Databricks-enabled  data lake  or  data mesh  projects, our teams prefer using Delta Lake storage over the direct use of file storage types such as  AWS S3  or  ADLS . Until recently, Delta Lake has been a closed proprietary product from Databricks, but it's now open source and accessible to non-Databricks platforms. However, our recommendation of Delta Lake as a default choice currently extends only to Databricks projects that use  Parquet  file formats. Delta Lake facilitates concurrent data read/write use cases where file-level transactionality is required. We find Delta Lake's seamless integration with Apache Spark  batch  and  micro-batch  APIs very helpful, particularly features such as  time travel  (accessing data at a particular point in time or commit reversion) as well as  schema evolution  support on write."
Design tokens,https://www.thoughtworks.com/radar/techniques/design-tokens,Oct-22,Trial,Techniques,https://tinyurl.com/2pedmtyq,"When faced with the challenge of using a  design system  consistently across many form factors and platforms, the team at Salesforce came up with the concept of  design tokens . The tokens store values, such as colors and fonts, in one central place. This makes it possible to  separate options from decisions , and it significantly improves  collaboration between teams . Design tokens are not new, but with the introduction of tools like  Tailwind CSS  and  Style Dictionary , we see design tokens being used more often."
Dragonfly,https://www.thoughtworks.com/radar/platforms/dragonfly,Oct-22,Assess,Platforms,https://tinyurl.com/2eu9o5e2,"Dragonfly  is a new in-memory data store with compatible  Redis  and Memcached APIs. It leverages the new Linux-specific  io_uring  API for I/O and implements  novel algorithms and data structures  on top of a multithreaded, shared-nothing architecture. Because of these clever choices in implementation, Dragonfly achieves impressive results in performance. Although Redis continues to be our default choice for in-memory data store solutions, we do think Dragonfly is an interesting choice to assess."
eBPF,https://www.thoughtworks.com/radar/platforms/ebpf,Oct-22,Trial,Platforms,https://tinyurl.com/2rxscvp7,"For several years now, the Linux kernel has included the extended Berkeley Packet Filter ( eBPF ), a virtual machine that provides the ability to attach filters to particular sockets. But eBPF goes far beyond packet filtering and allows custom scripts to be triggered at various points within the kernel with very little overhead. By allowing you to run sandboxed programs within the operating system kernel, application developers can run eBPF programs to add additional capabilities to the operating system at run time. Some of our projects require troubleshooting and profiling at the system call level, and our teams found that tools like  bcc  and  bpftrace  have made their jobs easier. Observability and network infrastructure also benefit from eBPF "" for example, the  Cilium  project can implement traffic load balancing and observability  without sidecar overhead  in  Kubernetes , and  Hubble  provides further security and traffic observability on top of it. The  Falco  project uses eBPF for security monitoring, and the  Katran  project uses eBPF to build more efficient L4 load balancing. The eBPF community is growing rapidly, and we're seeing more and more synergy with the field of observability."
Edge Impulse,https://www.thoughtworks.com/radar/platforms/edge-impulse,Oct-22,Assess,Platforms,https://tinyurl.com/2l7h27ln,"In previous Radars, we've written about  TinyML  "" the practice of running trained models on small devices with onboard sensors to make decisions or extract features without a roundtrip to the cloud.  Edge Impulse  has made the process of collecting sensor data and then training and deploying a model as simple as possible. Edge Impulse is an end-to-end hosted platform for developing models optimized to run on small edge devices such as microcontrollers. The platform guides the developer through the entire pipeline, including the task of collecting and labeling training data. They've made it easy to get started using your mobile phone for both data collection and running the classifier while the model training and refining happens in the more powerful, cloud-hosted environment. The resulting recognition algorithms can also be optimized, compiled and uploaded to a wide range of microcontroller architectures. Although Edge Impulse is a commercial venture, the platform is free for developers and makes the entire process fun and engaging even for those who are new to machine learning. The low barrier of entry to creating a working application means that we'll be seeing more edge devices with smart decisioning built in."
Excalidraw,https://www.thoughtworks.com/radar/tools/excalidraw,Oct-22,Trial,Tools,https://tinyurl.com/2ncr7omf,"We continue to hear enthusiastic reports about  Excalidraw  from our teams, but our previous caveat about security remains in place. Excalidraw is a simple yet powerful online drawing tool. Sometimes teams just need a quick picture instead of a formal diagram; for remote teams, Excalidraw provides a quick way to create and share diagrams. Our teams also like the ""lo-fi"" look of the diagrams it can produce, which is reminiscent of the whiteboard diagrams they would have produced when co-located. Regarding security, at the time of writing, anyone who has the link can see your diagrams; note, though, that the paid version of Excalidraw provides further authentication and options to run a server locally do exist."
Fake SMTP server to test mail-sending,https://www.thoughtworks.com/radar/techniques/fake-smtp-server-to-test-mail-sending,Oct-22,Trial,Techniques,https://tinyurl.com/2qgt6p9j,"Using test email accounts or entire test SMTP (Single Mail Transfer Protocol) servers remains a common software testing practice. However, using a real server carries the risk that  test emails will be sent to real people  and often complicates automated integration testing. We've seen success using a  fake SMTP server to test mail sending , which records a request to send an email without actually sending it. Multiple open-source tools exist in this space, including  fake-smtp-server , which renders emails in a web UI for visual testing, and  mountebank , which exposes the sent emails through a REST API for integration testing. We recommend exploring this technique to reduce risk and improve testing efficiency."
Feast,https://www.thoughtworks.com/radar/platforms/feast,Oct-22,Trial,Platforms,https://tinyurl.com/2ks4bkgv,"Feast  is an open-source  Feature Store  for machine learning. It has several useful properties, including generating point-in-time correct feature sets "" so error-prone future feature values do not leak to models during training "" and supporting both streaming and batch data sources. However, it currently only supports timestamped structured data and therefore may not be suitable if you work with unstructured data in your models. We've successfully used Feast at a significant scale as an offline store during model training and as an online store during prediction."
Federated machine learning,https://www.thoughtworks.com/radar/techniques/federated-machine-learning,Oct-22,Trial,Techniques,https://tinyurl.com/2pvqvlcg,"We're now seeing client projects that use  federated machine learning  (ML). Traditionally, ML model training has required data to be placed in a centralized location where the relevant training algorithm can be run. From a privacy point of view, this is problematic, especially when the training data contains sensitive or personally identifiable information; users might be reluctant to share data or local data protection legislation may prevent us from moving data to a central location. Federated ML is a decentralized technique for training on a large and diverse set of data that allows the data to remain remote "" for example, on a user's device. Network bandwidth and the computational limitations of devices still present significant technical challenges, but we like the way federated ML leaves users in control of their own personal information."
GCP Vertex AI,https://www.thoughtworks.com/radar/platforms/gcp-vertex-ai,Oct-22,Assess,Platforms,https://tinyurl.com/2lvh9sss,"GCP Vertex AI  is a unified artificial intelligence platform that allows teams to build, deploy and scale machine-learning (ML) models. Vertex AI includes pretrained models, which can be used directly, fine-tuned or combined with  AutoML , as well as infrastructure such as feature stores and pipelines for ML models. We like Vertex AI's integrated capabilities, which help to make it feel like a coherent AI platform."
git-together,https://www.thoughtworks.com/radar/tools/git-together,Oct-22,Assess,Tools,https://tinyurl.com/2zr6srox,"We're always looking for ways to remove small frictions from pair programming, which is why we're excited by  git-together , a tool written in Rust that simplifies git commit attribution during pairing. By aliasing  git-together  as  git , the tool allows you to add extensions to  git config  that capture committer information, aliasing each committer by their initials. Changing pairs (or switching to soloing or mob programming) requires you to run  git with , followed by the initials of the pair (for example:  git with bb cc ), allowing you to resume your regular git workflow afterward. Every time you commit, git-together will rotate through the pair as the official author that git stores, and it will automatically add any other authors to the bottom of the commit message. The configuration can be checked in with the repo, allowing git-together to work automatically after cloning a repo."
GitHub push protection,https://www.thoughtworks.com/radar/techniques/github-push-protection,Oct-22,Assess,Techniques,https://tinyurl.com/2numl6az,"The accidental publication of secrets seems to be a perennial issue with tools such as  Talisman  popping up to help with the problem. Before now, GitHub Enterprise Cloud users with an Advanced Security License could enable security scanning on their accounts, and any secrets (API keys, access tokens, credentials, etc.) that were accidentally committed and pushed would trigger an alert.  GitHub push protection  takes this one step further, and brings it one step earlier in the development workflow, by blocking changes from being pushed at all if secrets are detected. This needs to be configured for the organization and applies, of course, only to license holders, but additional protection from publishing secrets is to be welcomed."
Gradient,https://www.thoughtworks.com/radar/platforms/gradient,Oct-22,Assess,Platforms,https://tinyurl.com/2lv35xqc,"Gradient  is a platform for building, deploying and running machine-learning applications, very similar to Google's Colab. Notebooks can be created from templates, helping you to get started with  PyTorch  or  TensorFlow  or with applications like  Stable Diffusion . In our experience, Gradient is well-suited for GPU-intensive models, and we like that the web-based environment is persistent."
Gradle Kotlin DSL,https://www.thoughtworks.com/radar/languages-and-frameworks/gradle-kotlin-dsl,Oct-22,Trial,Languages & Frameworks,https://tinyurl.com/2g6nveqe,"Previously, we blipped about the Android Gradle plugin Kotlin DSL, or  Gradle Kotlin DSL , which added support for  Kotlin  Script as an alternative to  Groovy  for Android projects using  Gradle  build scripts. The goal of replacing Groovy with Kotlin is to provide better support for refactoring and simpler editing in IDEs and, ultimately, to produce code that is easier to read and maintain. For teams already using Kotlin, it also means working on the build in a familiar language. We now suggest trialing Kotlin DSL as an alternative language to Groovy for Gradle projects in general, especially if you have large or complex Gradle build scripts. Many IDEs now include support for the migration of existing projects. Some caveats remain, and we suggest checking the  documentation  for the most up-to-date details, including the prerequisites. We had a team with an at least seven-year-old, 450-line build script migrate successfully within a few days."
Great Expectations,https://www.thoughtworks.com/radar/tools/great-expectations,Oct-22,Adopt,Tools,https://tinyurl.com/2lzzosd8,"Great Expectations  has become a sensible default for our teams in the data quality space, which is why we recommend adopting it "" not only for the lack of better alternatives but also because our teams have reported great results in several client projects. Great Expectations is a framework that allows you to craft built-in controls that flag anomalies or quality issues in data pipelines. Just as unit tests run in a build pipeline, Great Expectations makes assertions during the execution of a data pipeline. We like its simplicity and ease of use "" the rules stored in JSON can be modified by our data domain experts without necessarily needing data engineering skills."
IAM Roles Anywhere,https://www.thoughtworks.com/radar/platforms/iam-roles-anywhere,Oct-22,Assess,Platforms,https://tinyurl.com/2zy76zc4,"IAM Roles Anywhere  is a new service from AWS that lets you obtain temporary security credentials in IAM for workloads such as servers, containers and applications that run outside of AWS. We find it particularly useful in hybrid cloud setups where workloads are split across AWS and non-AWS resources. Instead of creating long-lived credentials, with IAM Roles Anywhere, you can now create short-lived credentials to access AWS resources using X.509 certificates. We believe this approach streamlines the access pattern across the hybrid cloud and recommend you check it out."
Incremental developer platform,https://www.thoughtworks.com/radar/techniques/incremental-developer-platform,Oct-22,Trial,Techniques,https://tinyurl.com/2g7ez4lz,"We've been writing about developer platforms and how to build them in almost every edition of the Radar since 2017. In the meantime, the  Team Topologies  book has also done a great job of describing the ideal of a platform that supports developers with ""self-service APIs, tools, services and knowledge."" However, we often see teams shooting for too much of that platform vision too fast. Instead, building an  incremental developer platform  is key."
Infracost,https://www.thoughtworks.com/radar/tools/infracost,Oct-22,Assess,Tools,https://tinyurl.com/2jcw84vo,"We continue to see organizations move to the cloud without properly understanding how they will track ongoing spend. We previously blipped  run cost as architecture fitness function , and  Infracost  is a tool that aims to make these cloud cost trade-offs visible in Terraform pull requests. It's open-source software and available for macOS, Linux, Windows and Docker and supports pricing for AWS, GCP and Microsoft Azure out of the box. It also provides a public API that can be queried for current cost data. We remain excited by its potential, especially when it comes to gaining better cost visibility in the IDE."
io-ts,https://www.thoughtworks.com/radar/languages-and-frameworks/io-ts,Oct-22,Adopt,Languages & Frameworks,https://tinyurl.com/2ofn8vvu,"Our teams developing in  TypeScript  are finding  io-ts  invaluable, especially when interacting with APIs that ultimately result in the creation of objects with specific types. When working with TypeScript, getting data into the bounds of the type system (i.e., from the aforementioned APIs) can lead to run-time errors that can be hard to find and debug. io-ts bridges the gap between compile-time type checking and run-time consumption of external data by providing encode and decode functions. Given the experiences of our teams and the elegance of its approach, we think io-ts is worth adopting."
Hadolint,https://www.thoughtworks.com/radar/tools/hadolint,Oct-22,Trial,Tools,https://tinyurl.com/2kdwe8qh,"We like spreading the word about linting tools that actually help you find issues rather than just shortcut style disputes in the team.  Hadolint  is one of those tools "" it helps find common issues in Dockerfiles. We find it to be fast, accurate and with good documentation. It explains both how to fix an issue and why it's an issue in the first place, thus nudging Dockerfile authors toward good practices. Incidentally, Hadolint is built on top of  ShellCheck , which we recommend in its own right for checking your shell scripts."
Harness Cloud Cost Management,https://www.thoughtworks.com/radar/tools/harness-cloud-cost-management,Oct-22,Assess,Tools,https://tinyurl.com/2h57c72g,"Harness Cloud Cost Management  is a commercial tool that works across all three of the major cloud providers and their managed  Kubernetes  clusters to help visualize and manage cloud costs. The product calculates a cost efficiency score by looking at idle resources as well as resources not allocated to any workload and uses historical trends to help optimize resource allocation. The dashboards highlight cost spikes and allow a user to register unexpected anomalies, which are then fed into their reinforcement learning algorithm around anomaly detection. Cloud Cost Management can recommend adjustments to limits for memory and CPU usage, with options to optimize for either cost or performance. ""Perspectives"" allows you to group costs based on organizationally defined filters (which could correspond to business units, teams or products) and automate report distribution to bring visibility into cloud spend. We believe Cloud Cost Management offers a compelling feature set to help organizations mature their FinOps practices."
Jetpack Media3,https://www.thoughtworks.com/radar/languages-and-frameworks/jetpack-media3,Oct-22,Trial,Languages & Frameworks,https://tinyurl.com/2j7uj24h,"Android had several media APIs: Jetpack Media, also known as MediaCompat, Jetpack Media2 and ExoPlayer. Unfortunately, these libraries were developed independently, with different goals but overlapping functionality. Android developers not only had to choose which library to use, they also had to contend with writing adaptors or other connecting code when features from multiple APIs were needed.  Jetpack Media3  is an API that takes common areas of functionality from the existing APIs "" including UI, playback and media session handling "" and combines them into a merged and refined API. The player interface from ExoPlayer has also been updated, enhanced and streamlined to act as the common player interface for Media3. After an early access phase, Media3 is now in beta. Although its first release is forthcoming, we've already had positive experiences using it in apps."
JobRunr,https://www.thoughtworks.com/radar/languages-and-frameworks/jobrunr,Oct-22,Assess,Languages & Frameworks,https://tinyurl.com/2nkd3pgu,"JobRunr  is a library for background job processing in Java and an alternative to the Quartz scheduler. Our teams have enjoyed using JobRunr's built-in dashboard, which is easy to use and allows the monitoring and scheduling of background tasks. JobRunr is open source and free for commercial use; for features such as job migration and recovery, however, you need to get a paid license."
k6,https://www.thoughtworks.com/radar/tools/k6,Oct-22,Adopt,Tools,https://tinyurl.com/2md8pq9r,"Since we first mentioned it in the Radar,  k6  has become a go-to tool for performance testing. We continue to be fans of how easy it is to write JavaScript code for tests, but k6 also has a low-code  test builder  to make playing with the tool even easier. The documentation shows how easy it is to add performance testing to a pipeline across  multiple CI/CD tools . Our teams find it easy to integrate  visualization tools  like  Grafana  and New Relic, which help them tune both infrastructure and applications. The developer friendliness and ecosystem make k6 a compelling option for investigating a system's behavior under heavy load."
Kaniko,https://www.thoughtworks.com/radar/tools/kaniko,Oct-22,Trial,Tools,https://tinyurl.com/2mj7ukck,"Most of today's CI/CD pipeline tools and platforms are built on containers as runtimes. Many of our teams are using  Kaniko  to build container images from within those container-based pipelines. This comes as part of a trend away from  Docker  as the de facto standard for container runtimes. With Kaniko, you can build your images without using a Docker daemon. This helps avoid the security issue of Docker's ""privileged"" mode, which would be necessary for any ""Docker-in-Docker"" activity. Moreover, you don't have to assume that your pipeline has access to a Docker daemon in the first place, which cannot be taken for granted anymore and often requires extra configuration."
Karpenter,https://www.thoughtworks.com/radar/tools/karpenter,Oct-22,Assess,Tools,https://tinyurl.com/2ggfjx9n,"One of the fundamental capabilities of  Kubernetes  is its ability to automatically launch new pods when additional capacity is needed and shut them down when loads decrease. This horizontal autoscaling is a useful feature, but it can only work if the nodes needed to host the pods already exist. While  Cluster Autoscaler  can do some rudimentary cluster expansion triggered by pod failures, it has limited flexibility;  Karpenter , however, is an open-source  Kubernetes Operator  autoscaler with more smarts built in: it analyzes the current workloads and the pod scheduling constraints to automatically select an appropriate instance type and then start or stop it as needed. Karpenter is an operator in the spirit of tools like  Crossplane  that can provision cloud resources outside the cluster. Karpenter is an attractive companion to the autoscaling services cloud vendors provide natively with their managed Kubernetes clusters. For example, AWS now supports Karpenter as a first-class alternative in their EKS Cluster Autoscaler service."
Keptn,https://www.thoughtworks.com/radar/platforms/keptn,Oct-22,Assess,Platforms,https://tinyurl.com/2j4uz3k4,"Keptn  is a control plane for delivery and operations that relies on  CloudEvents  for instrumentation. Like one of the techniques we mentioned in  observability for CI/CD pipelines , Keptn visualizes its orchestration as traces. The declarative definition of the delivery pipeline aims to separate SRE intentions from the underlying implementation, relying on other observability, pipeline and deployment tooling to respond to the appropriate events. We're particularly excited by the idea of adding service-level objective (SLO) verifications as  architectural fitness functions  to CI/CD pipelines: Keptn lets you define service-level indicators (SLIs) as key-value pairs, with the value representing the query to your observability infrastructure. It will then evaluate the result against the defined SLOs as a  quality gate . Keptn takes the same approach to automated operations, allowing a declarative definition that specifies the intent of scaling a ReplicaSet in response to a degradation of average response time, for example. Created by Dynatrace, Keptn also integrates with  Prometheus  and Datadog."
Kotest,https://www.thoughtworks.com/radar/languages-and-frameworks/kotest,Oct-22,Adopt,Languages & Frameworks,https://tinyurl.com/2pg6c44v,"Kotest  (previously KotlinTest) is a stand-alone testing tool for the  Kotlin  ecosystem that is widely used among our teams across various Kotlin implementations "" native, JVM or JavaScript. Its key advantages are that it offers a variety of testing styles in order to structure test suites and that it comes with a comprehensive set of matchers, which allow for expressive tests in an elegant internal DSL. In addition to its support for  property-based testing , our teams like the solid IntelliJ plugin and the support community. Many of our developers consider it their first choice and recommend those who are still using JUnit in Kotlin consider switching over to Kotest."
Kusto Query Language,https://www.thoughtworks.com/radar/tools/kusto-query-language,Oct-22,Trial,Tools,https://tinyurl.com/2puj256b,"As data work becomes more common, we continue to see tools that try to enhance the SQL language;  Kusto Query Language  (KQL) is one of them. KQL was created by Azure, and it brings modularity, encapsulation, composability, reusability, extensibility and dynamism to relational querying. Our teams quite like its interactivity: you can pipe a query to the render operator and see a chart instantly. You can also combine these charts into dashboards and get insights from logs to execs in minutes. Although the KQL language is currently limited to the  Azure Data Explorer , we anticipate the move to enhance SQL to achieve better data operability will not stop."
Ladle,https://www.thoughtworks.com/radar/languages-and-frameworks/ladle,Oct-22,Trial,Languages & Frameworks,https://tinyurl.com/2ebbmuoz,"As  Storybook  grew in popularity, it became more and more of a behemoth. If all you really care about is isolating and testing your React UI components, then  Ladle  is the alternative. Ladle supports most of the Storybook API (MDX files are not supported yet) and can be used as a drop-in replacement. It is lightweight and has better integration with  Vite . It also provides simple and clean APIs that can be easily integrated with other testing frameworks."
Local-first application,https://www.thoughtworks.com/radar/techniques/local-first-application,Oct-22,Assess,Techniques,https://tinyurl.com/2mb6x9a8,"In a centralized application, the data on the server is the single source of truth "" any modification to the data must go through the server. Local data is subordinate to the server version. This seems like a natural and inevitable choice to enable collaboration among multiple users of the software.  Local-first application , or  local-first software , is a set of principles that enables both collaboration and local data ownership. It prioritizes the use of local storage and local networks over servers in remote data centers or the cloud. Techniques like conflict-free replicated data types (CRDTs) and peer-to-peer (P2P) networks have the potential to be a foundational technology for realizing local-first software."
Metrics store,https://www.thoughtworks.com/radar/techniques/metrics-store,Oct-22,Assess,Techniques,https://tinyurl.com/2n3wacuk,"Metrics store , sometimes referred to as headless business intelligence (BI), is a layer that decouples metrics definitions from their usage in reports and visualizations. Traditionally, metrics are defined inside the context of BI tools, but this approach leads to duplication and inconsistencies as different teams use them in different contexts. By decoupling the definition in the metrics store, we get clear and consistent reuse across BI reports, visualizations and even embedded analytics. This technique is not new; for example, Airbnb introduced  Minerva  a year ago. However, we're now seeing considerable traction in the data and analytics ecosystem with more tools supporting metrics stores out of the box."
NestJS,https://www.thoughtworks.com/radar/languages-and-frameworks/nestjs,Oct-22,Adopt,Languages & Frameworks,https://tinyurl.com/2kk54674,"In the past, we've cautioned about  Node overload , and we're still cautious about the reasons to choose it. However, in scenarios where Node.js is required to build back-end applications, our teams are reporting that  NestJS  is a suitable option to enable developers to create testable, scalable, loosely coupled and easily maintainable applications in enterprises. NestJS is a  TypeScript -first framework that makes the development of Node.js applications safer and less error-prone. NestJS is opinionated and comes with SOLID principles and an  Angular -inspired architecture out of the box."
Observability for CI/CD pipelines,https://www.thoughtworks.com/radar/techniques/observability-for-ci-cd-pipelines,Oct-22,Trial,Techniques,https://tinyurl.com/2nhcaogs,"Observability practices have shifted the conversation from monitoring for well-understood problems to helping troubleshoot unknown problems in distributed systems. We've seen success taking that perspective outside of the traditional production environment by applying  observability for CI/CD pipelines  to help optimize testing and deployment bottlenecks. Complex pipelines create developer friction when they run too slow or suffer from nondeterminism, reducing important feedback loops and hindering developer effectiveness. Additionally, their role as critical deployment infrastructure creates stress points during periods of rapid deployments, as happened to several organizations responding to the recent log4shell vulnerability. The concept of traces translates nicely to pipelines: instead of capturing the cascade of service calls, child spans capture information about each stage of the build. The same waterfall charts used to analyze a call flow in a distributed architecture can also be effective in helping us to identify bottlenecks in pipelines, even complex ones with fan-in and fan-out. This enables far more focused optimization efforts. While the technique should work with any tracing tool,  Honeycomb  supports a tool called  buildevents  that helps capture pipeline trace information. An alternative approach of capturing information already exposed by CI/CD platforms, taken by the open-source  buildviz  (built and maintained by a Thoughtworker), allows for a similar investigation without changing the step configurations themselves."
Online services for formatting or parsing code,https://www.thoughtworks.com/radar/tools/online-services-for-formatting-or-parsing-code,Oct-22,Hold,Tools,https://tinyurl.com/2pj7op2s,"We previously called out  production data in test environments  and now want to highlight another common practice that needs to be approached with care or even stopped entirely:  online services for formatting or parsing code . There are many useful sites for formatting or parsing formats such as JSON and YAML, as well as sites that assess code tutorials or produce online code metrics. Great care is needed when using these. Pasting a block of JavaScript, JSON or similar into an unknown website can easily create security and privacy issues and might unknowingly export personal data into a different jurisdiction. These sites should never be used with production data and should be approached with caution in all other circumstances."
OpenMetadata,https://www.thoughtworks.com/radar/platforms/openmetadata,Oct-22,Assess,Platforms,https://tinyurl.com/2j6a6taz,"Undoubtedly,  data discoverability  has become a very important focal point for companies since it is an enabler for data to be shared and used efficiently by different people. We've included platforms such as  DataHub  and  Collibra  in previous editions of the Radar. However, our teams are constantly assessing options in this space and have recently shown interest in  OpenMetadata , a platform dedicated to metadata management by using open standards. Our teams like this open-source platform because it improves the development experience due to its simple architecture, easy deployment with a focus on automation and strong focus on data discoverability."
OrioleDB,https://www.thoughtworks.com/radar/platforms/orioledb,Oct-22,Assess,Platforms,https://tinyurl.com/2q56b7zp,"OrioleDB  is a new storage engine for PostgreSQL. Our teams use PostgreSQL a lot, but its storage engine was originally designed for hard drives. Although there are several options to tune for modern hardware, it can be difficult and cumbersome to achieve optimal results. OrioleDB addresses these challenges by implementing a cloud-native storage engine with explicit support for solid-state drives (SSDs) and nonvolatile random-access memory (NVRAM). To try the new engine, first install the enhancement patches to the current  table access methods  and then install OrioleDB as a PostgreSQL extension. We believe OrioleDB has great potential to address several  long-pending issues in PostgreSQL , and we encourage you to carefully assess it."
Path-to-production mapping,https://www.thoughtworks.com/radar/techniques/path-to-production-mapping,Oct-22,Adopt,Techniques,https://tinyurl.com/2qx3c9gw,"Although  path-to-production mapping  has been a near-universal practice at Thoughtworks since codifying  Continuous Delivery , we often come across organizations unfamiliar with the practice. The activity is most often done in a workshop with a cross-functional group of people "" that includes everyone involved in designing, developing, releasing and operating the software "" around a shared whiteboard (or virtual equivalent). First, the steps in the process are listed in order, from the developer workstation all the way to production. Then, a facilitated session is used to capture further information and pain points. The most common technique we see is based on  value-stream mapping , although plenty of  process map  variants are equally valuable. The activity is often eye-opening for many of the participants, as they identify delays, risks and inconsistencies and continue to use the visual representation for the continuous improvement of the build and deploy process. We consider this technique so foundational that we were surprised to discover we hadn't blipped it before."
React Query,https://www.thoughtworks.com/radar/languages-and-frameworks/react-query,Oct-22,Adopt,Languages & Frameworks,https://tinyurl.com/2kkscuwk,"React Query  is often described as the missing data-fetching library for  React . Fetching, caching, synchronizing and updating server state is a common requirement in many React applications, and although the requirements are well understood, getting the implementation right is notoriously difficult. React Query provides a straightforward solution using hooks. It works hand-in-hand with existing async data-fetching libraries like  axios ,  Fetch  and  GraphQL  since they are built on promises. As an application developer, you simply pass a function that resolves your data and leave everything else to the framework. We like that it works out of the box but still offers a lot of configuration when needed. The developer tools, unfortunately not yet available for  React Native , also help developers new to the framework understand how it works. For React Native, you can use a  third-party developer tools plugin  utilizing  Flipper . In our experience, version 3 of React Query brought the stability needed to be used in production with our clients."
Retool,https://www.thoughtworks.com/radar/platforms/retool,Oct-22,Trial,Platforms,https://tinyurl.com/2n7lf8g8,"In previous editions, we've recommended assessing  bounded low-code platforms  as a method for applying low-code solutions to specific use cases in very limited domains. We've seen some traction in this space, specifically with  Retool , a low-code platform that our teams use to build solutions for internal users, predominantly to query and visualize data. It allows them to produce non-business-critical read-only solutions faster. The main reported benefits of Retool are its UI components and its ability to be integrated quickly and easily with common data sources."
"Satellite workers without ""remote native""",https://www.thoughtworks.com/radar/techniques/satellite-workers-without-remote-native,Oct-22,Hold,Techniques,https://tinyurl.com/2zhbg8ws,"The term ""remote team setup"" does not just describe one setup; it encompasses multiple  patterns and flavors . And many teams have been changing patterns recently. They're coming out of the ""everybody always remote"" mode that was forced on them by a pandemic and moving into a pattern of (often rotating) satellite workers, where part of the team is co-located and part of the team is remote. We see many of them failing to properly consider what this means for their ways of working.  Satellite workers without ""remote native""  ways of working is a slip back into privileging co-located practices. In a setup with satellite workers, it's important to still  use ""remote native"" processes and approaches by default . For example, if the co-located part of the team joins a meeting together, they should still all be on their individual laptops to participate in digital collaboration or meeting chat. Teams need to be aware of the risk of excluding their satellite workers and creating silos and feelings of exclusion. If you know that you'll always have at least one satellite team member, the default ways of working should assume remoteness."
Seldon Core,https://www.thoughtworks.com/radar/platforms/seldon-core,Oct-22,Trial,Platforms,https://tinyurl.com/2q5lyael,"Seldon Core  is an open-source platform to package, deploy, monitor and manage machine learning models in  Kubernetes  clusters. With out-of-the-box support for several machine-learning frameworks, you can easily containerize your models using  prepackaged inference servers ,  custom inference servers  or  language wrappers . With distributed tracing through  Jaeger  and model explainability via  Alibi , Seldon Core addresses several last-mile delivery challenges with machine learning deployments, and our data teams like it."
Server-driven UI,https://www.thoughtworks.com/radar/techniques/server-driven-ui,Oct-22,Assess,Techniques,https://tinyurl.com/2hl6gdst,"Server-driven UI  continues to be a hot topic of discussion in mobile circles because it offers the potential for developers to take advantage of faster change cycles without falling foul of an app store's policies around revalidation of the mobile app itself. Server-driven UI separates the rendering into a generic container in the mobile app while the structure and data for each view is provided by the server. This means that changes that once required a round trip to an app store can now be accomplished via simple changes to the responses the server sends. While some very large mobile app teams have had great success with this technique, it also requires a substantial investment in building and maintaining a complex proprietary framework. Such an investment requires a compelling business case. Until the case is made, it might be best to proceed with caution; indeed, we've experienced some horrendous, overly configurable messes that didn't actually deliver on the promised benefits. But with the backing of behemoths such as Airbnb and Lyft, we may very well see some useful frameworks emerge that help tame the complexity. Watch this space."
SLIs and SLOs as code,https://www.thoughtworks.com/radar/techniques/slis-and-slos-as-code,Oct-22,Assess,Techniques,https://tinyurl.com/2fcxxdus,"Since Google first popularized service-level indicators (SLIs) and service-level objectives (SLOs) as part of their site reliability engineering (SRE) practice, observability tools like  Datadog ,  Honeycomb  and  Dynatrace  started incorporating SLO monitoring into their toolchains.  OpenSLO  is an emerging standard that allows defining  SLIs and SLOs as code , using a declarative, vendor-neutral specification language based on the YAML format used by  Kubernetes . While the standard is still quite new, we're seeing some encouraging momentum, as with Sumo Logic's contribution of the  slogen  tool to generate monitoring and dashboards. We're excited by the promise of versioning SLI and SLO definitions in code and updating observability tooling as part of the CI/CD pipeline of the service being deployed."
SLSA,https://www.thoughtworks.com/radar/techniques/slsa,Oct-22,Trial,Techniques,https://tinyurl.com/2ptdrlmp,"As software continues to grow in complexity, the threat vector of software dependencies becomes increasingly challenging to guard against. Supply chain Levels for Software Artifacts, or  SLSA  (pronounced ""salsa""), is a consortium-curated set of guidance for organizations to protect against supply chain attacks, evolved from internal guidance Google has been using for years. We appreciate that SLSA doesn't promise a ""silver bullet,"" tools-only approach to securing the supply chain, but it does provide a checklist of concrete threats and practices along a maturity model. The  threat model  is easy to follow with real-world examples of attacks, and the  requirements  provide guidance to help organizations prioritize actions based on levels of increasing robustness to improve their supply chain security posture. Since we first mentioned it in the Radar, SLSA has added more detail around  software attestations  with examples to track concerns like  build provenance . Our teams have found SLSA to strike a nice balance between implementation guidance and higher-level awareness around supply chain threats."
Soda Core,https://www.thoughtworks.com/radar/tools/soda-core,Oct-22,Assess,Tools,https://tinyurl.com/2jkx58pl,"Soda Core  is an open-source data quality and observability tool. We talked about  Great Expectations  previously in the Radar, and Soda Core is an alternative with a key difference "" you express the data validations in a DSL called  SodaCL  (previously called  Soda SQL ) as opposed to Python functions. Once the validations are written, it can be executed as part of a  data pipeline  or  scheduled to run programmatically . As we become increasingly data-driven, it's critical to maintain data quality, and we encourage you to assess Soda Core."
Software Bill of Materials,https://www.thoughtworks.com/radar/techniques/software-bill-of-materials,Oct-22,Trial,Techniques,https://tinyurl.com/2hpr5m3v,"With continued pressure to keep systems secure and no reduction in the general threat landscape, a machine-readable  Software Bill of Materials  (SBOM) may help teams stay on top of security problems in the libraries that they rely on. Since the original  Executive Order  was published, the industry has gained clarity and understanding of what an SBOM is and how to create one; the National Institute of Standards and Technology (NIST), for example, now has more  specific advice  on how to comply with the order. We've had production experience using SBOMs on projects ranging from small companies to large multinationals and even government departments, and we're convinced they provide a benefit. More organizations and governments should consider requiring SBOMs for the software they use. The technique will be strengthened by the new tools that continue to emerge, such as the  Firebase Android BOM  that automatically aligns an application's library dependencies to those listed in the BOM."
Soketi,https://www.thoughtworks.com/radar/languages-and-frameworks/soketi,Oct-22,Assess,Languages & Frameworks,https://tinyurl.com/2nllkpnt,"Soketi  is an open-source WebSockets server. If your application is compatible with the  Pusher  protocol, you can plug Soketi in directly as it fully implements the  Pusher Protocol v7 . We find the  beta support  for Cloudflare Workers particularly interesting because it opens the door to using WebSockets at the network edge."
SPA by default,https://www.thoughtworks.com/radar/techniques/spa-by-default,Oct-22,Hold,Techniques,https://tinyurl.com/2mfqqkvm,"The prevalence of teams choosing a single-page application (SPA) when they need a website continues. We remain concerned that people aren't properly recognizing SPAs as an architectural style to begin with; instead they're immediately jumping into framework selection. SPAs incur complexity that simply doesn't exist with traditional server-based websites: issues such as search engine optimization, browser history management, web analytics and first page load time all need to be addressed. Proper analysis and consideration of the trade-offs is required to determine if that complexity is warranted for business or user experience reasons. Too often teams are skipping that trade-off analysis, blindly accepting the complexity of  SPAs by default  even when business needs don't justify it. We still see some developers who aren't aware of an alternative approach because they've spent their entire career in a framework like React. We believe that many websites will benefit from the simplicity of server-side logic, and we're encouraged by techniques like  Hotwire  that help close the gap on user experience."
Spectral,https://www.thoughtworks.com/radar/tools/spectral,Oct-22,Trial,Tools,https://tinyurl.com/2ktvpa96,"Spectral  is a JSON/YAML linter with an emphasis on OpenAPI and AsyncAPI specifications. It ships with a comprehensive set of out-of-the-box rules for these specs that can save developers headaches when designing and implementing APIs or event-driven collaboration. These rules check for proper API parameter specifications or the existence of a license statement in the spec, among other things. The  CLI  makes it easy to incorporate Spectral into both local development and CI/CD pipelines, and the  JavaScript API  supports more advanced use cases. The  GitHub site  links to publicly available real-world rule sets from companies like Adidas, giving teams a head start on adopting their own linting rules."
Stable Diffusion,https://www.thoughtworks.com/radar/languages-and-frameworks/stable-diffusion,Oct-22,Assess,Languages & Frameworks,https://tinyurl.com/2z62qydx,"OpenAI's  DALL·E  caught everyone's attention with its ability to create  images from text prompts . Now,  Stable Diffusion  offers the same capability but, critically, it's open source. Anyone with access to a powerful graphics card can experiment with the model, and anyone with  sufficient  compute resources can recreate the model themselves. The results are  astounding  but also raise significant questions. For example, the model is trained on image-text pairs obtained via a  broad scrape of the internet  and therefore will reflect societal biases, which means it could possibly produce content that is illegal, upsetting, or at the very least undesirable. Stable Diffusion now includes an AI-based  safety classifier ; however, given its open-source nature, people can disable the classifier. Finally, artists have noted that with the right prompts the model is adept at mimicking their artistic style. This raises questions about the ethical and legal implications of an AI capable of imitating an artist."
Styra Declarative Authorization Service,https://www.thoughtworks.com/radar/tools/styra-declarative-authorization-service,Oct-22,Trial,Tools,https://tinyurl.com/2nm3n5qs,"Styra Declarative Authorization Service  (DAS) is a governance and automation tool for managing  Open Policy Agent (OPA)  at scale. Built by the creators of OPA, the tool allows us to deploy policies across ""systems,"" including  Kubernetes  clusters, infrastructure code repositories, namespaces and more. Most importantly, it allows for real-time analysis of decisions made by an OPA agent, along with replayability for debugging and investigating what-if scenarios for policy changes. It also comes with an audit log that can help security teams with historical reporting."
Superficial cloud native,https://www.thoughtworks.com/radar/techniques/superficial-cloud-native,Oct-22,Hold,Techniques,https://tinyurl.com/2zkbh7h8,"The term ""cloud native"" was originally used to describe architectures with characteristics that took maximum advantage of public cloud hosting. Examples include distributed architectures composed of many small, stateless and collaborating processes, and systems with high levels of automation for building, testing and deploying applications. However, we've noticed a growing trend toward  superficial cloud native  designs that simply use a lot of a cloud vendor's proprietary services and stop there without revisiting the fundamentally monolithic, brittle or toil-intensive nature of the application. It's important to remember that serverless functions by themselves don't make an application more resilient or easier to maintain and that cloud native is really a matter of design rather than a set of implementation choices."
Svelte,https://www.thoughtworks.com/radar/languages-and-frameworks/svelte,Oct-22,Trial,Languages & Frameworks,https://tinyurl.com/2eg8k62w,"Among web component frameworks,  Svelte  stands out by moving reactivity out of the browser and into the compiler. Instead of optimizing DOM updates by using a virtual DOM and browser optimization tricks, Svelte compiles your code into vanilla framework-less JavaScript code that surgically updates the DOM directly. In addition to the run-time performance benefits, this also allows Svelte to optimize the amount of code the browser has to download without sacrificing features for developers; moreover, it's proven to be performant and battery-friendly for mobile web applications as less code has to execute in the browser itself. Performance benefits aside, our teams have appreciated its friendly learning curve and the maintenance benefits that come from  writing less code . Svelte itself is only the component framework, but  SvelteKit  adds features to build full web applications."
Swift Package Manager,https://www.thoughtworks.com/radar/languages-and-frameworks/swift-package-manager,Oct-22,Adopt,Languages & Frameworks,https://tinyurl.com/2dtgtryf,"When introduced in 2014, Swift didn't come with a package manager. Later,  Swift Package Manager  was created as an official Apple open-source project, and this solution has continued to develop and mature. Our teams rely increasingly on SwiftPM because most packages can be included through it and the processes for both creators and consumers of packages have been streamlined. In the previous Radar, we recommended trialing, but we now believe it makes sense to select it as the default when starting new projects. For existing projects using tools like CocoaPods or  Carthage , it might be worth a quick experiment to gauge the level of effort to migrate and to check whether all dependencies are available."
Synthetic data for testing models,https://www.thoughtworks.com/radar/techniques/synthetic-data-for-testing-models,Oct-22,Assess,Techniques,https://tinyurl.com/2lk9b8n6,"During our discussions for this edition of the Radar, several tools and applications for synthetic data generation came up. As the tools mature, we've found that using  synthetic data for testing models  is a powerful and broadly useful technique. Although not intended as a substitute for real data in validating the discrimination power of machine-learning models, synthetic data can be used in a variety of situations. For example, it can be used to guard against catastrophic model failure in response to rarely occurring events or to test data pipelines without exposing personally identifiable information. Synthetic data is also useful for exploring edge cases that lack real data or for identifying model bias. Some helpful tools for generating data include  Faker  or  Synth , which generate data that conforms to desired statistical properties, and tools like  Synthetic Data Vault  that can generate data that mimics the properties of an input data set."
Synthetic Data Vault,https://www.thoughtworks.com/radar/languages-and-frameworks/synthetic-data-vault,Oct-22,Assess,Languages & Frameworks,https://tinyurl.com/2m85tjgv,"Synthetic Data Vault (SDV)  is a synthetic data generation ecosystem of libraries that can learn the distribution of a data set to generate synthetic data with the same format and statistical properties as the source. In the past, we talked about the downsides of using  production data in test environments . However, the nuances of data distribution in production can hardly be replicated manually, resulting in defects and surprises. We believe SDV and similar tools can address this gap by generating production-like data for  single-table ,  complex multi-table  and  multivariate timeseries  data. Although SDV isn't new, we quite like it and decided to highlight it."
Team cognitive load,https://www.thoughtworks.com/radar/techniques/team-cognitive-load,Oct-22,Adopt,Techniques,https://tinyurl.com/2kw5xnjv,"Team interaction is a key concept when redesigning an organization for business agility and speed. These interactions will be reflected in the software being built (see  Conway's Law ) and indicate how effectively teams can autonomously deliver value to their customers. Our advice is to be intentional about how teams are designed and how they interact. Because we believe that organizational design and team interactions evolve over time, we think it's particularly important to measure and keep track of the  team cognitive load , which indicates how easy or difficult teams find building, testing and maintaining their services. We've been using a  template  to assess team cognitive load that is based on ideas by the authors of the  Team Topologies  book."
Teleport,https://www.thoughtworks.com/radar/platforms/teleport,Oct-22,Trial,Platforms,https://tinyurl.com/2of5ubev,"Teleport  is a tool for  zero trust  network access to infrastructure. Traditional setups require complex policies or jump servers to restrict access to critical resources. Teleport, however, simplifies this with a unified access plane and with fine-grained authorization controls that replace jump servers, VPNs or shared credentials. Implemented as a single binary with out-of-the-box support for several protocols (including SSH, RDP,  Kubernetes  API, MySQL,  MongoDB  and PostgreSQL wire protocols), Teleport makes it easy to set up and manage secured access across Linux, Windows or Kubernetes environments. Since we first mentioned it in the Radar, a few teams have used Teleport and our overall positive experience prompted us to highlight it."
Teller,https://www.thoughtworks.com/radar/tools/teller,Oct-22,Assess,Tools,https://tinyurl.com/2p63awg6,"Teller  is an open-source universal secret manager for developers that ensures the correct environment variables are set when starting an application. However, it's not a vault itself "" it's a CLI tool that connects to a variety of sources, ranging from cloud secrets providers to third-party solutions like  HashiCorp Vault  to local environment files. Teller has additional functionality to scan for vault-kept secrets in your code, to redact secrets from logs, to detect drift between secrets providers and to sync between them. Given the sensitivity of accessing secrets, we can't emphasize enough the need to secure the supply chain for open-source dependencies, but we appreciate how easy the CLI is to use in local development environments, CI/CD pipelines and deployment automation."
Threat modeling,https://www.thoughtworks.com/radar/techniques/threat-modeling,Oct-22,Adopt,Techniques,https://tinyurl.com/2zw4gbc5,"We continue to recommend that teams carry out  threat modeling  "" a set of techniques to help you identify and classify potential threats during the development process "" but we want to emphasize that this is not a one-off activity only done at the start of projects; teams need to avoid the  security sandwich . This is because throughout the lifetime of any software, new threats will emerge and existing ones will continue to evolve thanks to external events and ongoing changes to requirements and architecture. This means that threat modeling needs to be repeated periodically "" the frequency of repetition will depend on the circumstances and will need to consider factors such as the cost of running the exercise and the potential risk to the business. When used in conjunction with other techniques, such as establishing cross-functional security requirements to address common risks in the project's technologies and using automated security scanners, threat modeling can be a powerful asset."
TinyML,https://www.thoughtworks.com/radar/techniques/tinyml,Oct-22,Assess,Techniques,https://tinyurl.com/2kjw57pm,"We continue to be excited by the  TinyML  technique and the ability to create machine learning (ML) models designed to run on low-powered and mobile devices. Until recently, executing an ML model was seen as computationally expensive and, in some cases, required special-purpose hardware. While creating the models still broadly sits within this classification, they can now be created in a way that allows them to be run on small, low-cost and low-power consumption devices. If you've been considering using ML but thought it unrealistic because of compute or network constraints, then this technique is worth assessing."
Verifiable credentials,https://www.thoughtworks.com/radar/techniques/verifiable-credentials,Oct-22,Assess,Techniques,https://tinyurl.com/2gy6l9yc,"When we first included it in the Radar two years ago,  verifiable credentials  (VC) was an intriguing standard with some promising potential applications, but it wasn't widely known or understood outside the community of enthusiasts. This was particularly true when it came to the credential-granting institutions, such as state governments, who would be responsible for implementing the standards. Two years and one pandemic later, the demand for cryptographically secure, privacy-respecting and machine-verifiable electronic credentials has grown and, as a result, governments are starting to wake up to VC's potential. We're now starting to see VC crop up in our work for public-sector clients. The  W3C standard  puts credential holders at the center, which is similar to our experience when using physical credentials: users can put their verifiable credentials in their own digital wallets and show them to anyone at any time without the permission of the credentials' issuer. This decentralized approach also enables users to better manage and selectively disclose their own information which greatly improves data privacy protection. For example, powered by zero-knowledge proof technology, you can construct a verifiable credential to prove that you're an adult without revealing your birthday. It's important to note that although many VC-based  decentralized identity  solutions rely on blockchain technology, blockchain is not a prerequisite for all VC implementations."
VictoriaMetrics,https://www.thoughtworks.com/radar/platforms/victoriametrics,Oct-22,Trial,Platforms,https://tinyurl.com/2no7mbnk,"Modern observability relies on collecting and aggregating an exhaustive set of granular metrics to fully understand, predict and analyze system behavior. But when applied to a cloud native system composed of many redundant and cooperating processes and hosts, the cardinality (or number of unique time series) becomes unwieldy because it grows exponentially with each additional service, container, node, cluster, etc. When dealing with high-cardinality data, we've found that  VictoriaMetrics  performs well. VictoriaMetrics is particularly useful for operating  Kubernetes -hosted  microservice  architectures, and the VictoriaMetrics operator makes it easy for teams to implement their own monitoring in a self-service way. We also like its componentized architecture and ability to continue collecting metrics even when the central server is unavailable. Although our team has been happy with VictoriaMetrics, this is a rapidly evolving area, and we'd recommend keeping an eye on other high-performance,  Prometheus -compatible time series databases such as  Cortex  or  Thanos ."
xbar for build monitoring,https://www.thoughtworks.com/radar/tools/xbar-for-build-monitoring,Oct-22,Trial,Tools,https://tinyurl.com/2nzartmy,"On remote teams, we sorely lack having a  dedicated build monitor  in the room; unfortunately, newer continuous integration (CI) tools lack support for the old  CCTray  format. The result is that broken builds aren't always picked up as quickly as we'd like. To solve this problem, many of our teams have started using  xbar for build monitoring . With xbar, one can execute a script to poll build status, displaying it on the menu bar. It can be further scripted to track other team metrics such as pending credential expiries or how far the production release lags behind the user acceptance testing (UAT) release. Of course, xbar is more general purpose, but it solves an immediate and emergent problem caused by remote working.  Rumps , among other tools, can solve the same problem."
Xcode Cloud,https://www.thoughtworks.com/radar/tools/xcode-cloud,Oct-22,Assess,Tools,https://tinyurl.com/2pq7yp59,"Xcode Cloud  is a CI/CD tool that is built into Xcode and used to build, test and deploy Apple apps. It provides an integrated experience with familiar tools for Apple developers like Xcode, App Store Connect and TestFlight. Based on our team's experience, it does a good job of simplifying the pipeline configuration and provisioning profiles and certificates. This tool is quite fresh and most of our mobile development teams are still using the more mature  Bitrise . Still, we think it's worth assessing and tracking its progress."
actions-runner-controller,https://www.thoughtworks.com/radar/platforms/actions-runner-controller,Mar-22,Assess,Platforms,https://tinyurl.com/2zmy7ev5,"actions-runner-controller  is a Kubernetes  controller  that operates  self-hosted runners  for  GitHub Actions  on your Kubernetes cluster. With this tool you create a runner resource on Kubernetes, and it will run and operate the self-hosted runner. Self-hosted runners are helpful in scenarios where the job that your GitHub Actions runs needs to access resources that are either not accessible to GitHub cloud runners or have specific operating system and environmental requirements that are different from what GitHub provides. In those cases where you have a Kubernetes cluster, you can run your self-hosted runners as a Kubernetes pod, with the ability to scale up or down hooking into GitHub webhook events. actions-controller-runner is lightweight and scalable."
AKHQ,https://www.thoughtworks.com/radar/tools/akhq,Mar-22,Trial,Tools,https://tinyurl.com/2g94rgvr,"AKHQ  is a GUI for Apache Kafka that lets you manage topics, topics data, consumer groups and more. Some of our teams have found AKHQ to be an effective tool to watch the real-time status of a Kafka cluster. You can, for example, browse the topics on a cluster. For each topic, you can visualize the name, the number of messages stored, the disk size used, the time of the last record, the number of partitions, the replication factor with the in-sync quantity and the consumer group. With options for Avro and Protobuf deserialization, AKHQ can help you understand the flow of data in your Kafka environment."
Apache Iceberg,https://www.thoughtworks.com/radar/platforms/apache-iceberg,Mar-22,Assess,Platforms,https://tinyurl.com/2o68j6r8,"Apache Iceberg  is an open table format for very large analytic data sets. Iceberg supports modern analytical data operations such as record-level insert, update, delete,  time-travel queries , ACID transactions,  hidden partitioning  and  full schema evolution . It supports multiple underlying file storage formats such as  Apache Parquet ,  Apache ORC  and  Apache Avro . Many data-processing engines support Apache Iceberg, including SQL engines such as  Dremio  and  Trino  as well as (structured) streaming engines such as  Apache Spark  and  Apache Flink ."
Azure Data Factory for orchestration,https://www.thoughtworks.com/radar/techniques/azure-data-factory-for-orchestration,Mar-22,Hold,Techniques,https://tinyurl.com/2kt9coco,"For organizations using Azure as their primary cloud provider,  Azure Data Factory  is currently the default for orchestrating data-processing pipelines. It supports data ingestion, copying data from and to different storage types on prem or on Azure and executing transformation logic. Although we've had adequate experience with Azure Data Factory for simple migrations of data stores from on prem to the cloud, we discourage the use of  Azure Data Factory for orchestration  of complex data-processing pipelines and workflows. We've had some success with Azure Data Factory when it's used primarily to move data between systems. For more complex data pipelines, it still has its challenges, including poor debuggability and error reporting; limited observability as Azure Data Factory logging capabilities don't integrate with other products such as Azure Data Lake Storage or Databricks, making it difficult to get an end-to-end observability in place; and availability of data source-triggering mechanisms only to certain regions. At this time, we encourage using other open-source orchestration tools (e.g.,  Airflow ) for complex data pipelines and limiting Azure Data Factory for data copying or snapshotting. Our teams continue to use Data Factory to move and extract data, but for larger operations we recommend other, more well-rounded workflow tools."
Azure DevOps,https://www.thoughtworks.com/radar/platforms/azure-devops,Mar-22,Trial,Platforms,https://tinyurl.com/26srzxt6,"As the  Azure DevOps  ecosystem keeps growing, our teams are using it more with success. These services contain a set of managed services, including hosted Git repos, build and deployment pipelines, automated testing tooling, backlog management tooling and artifact repository. We've seen our teams gaining experience in using this platform with good results, which means Azure DevOps is maturing. We particularly like its flexibility; it allows you to use the services you want even if they're from different providers. For instance, you could use an external Git repository while still using the Azure DevOps pipeline services. Our teams are especially excited about  Azure DevOps Pipelines . As the ecosystem matures, we're seeing an uptick in onboarding teams that are already on the Azure stack as it easily integrates with the rest of the Microsoft world."
Azure Pipeline templates,https://www.thoughtworks.com/radar/platforms/azure-pipeline-templates,Mar-22,Trial,Platforms,https://tinyurl.com/2qks74wd,"Azure Pipeline templates  allow you to remove duplication in your Azure Pipeline definition through two mechanisms. With ""includes"" templates, you can reference a template such that it will expand inline like a parameterized C++ macro, allowing a simple way of factoring out common configuration across stages, jobs and steps. With ""extends"" templates, you can define an outer shell with common pipeline configuration, and with the  required template approval , you can fail the build if the pipeline doesn't extend certain templates, preventing malicious attacks against the pipeline configuration itself. Along with  CircleCI  Orbs and the newer  GitHub Actions Reusable Workflows , Azure Pipeline templates are part of the trend of creating modularity in pipeline design across multiple platforms, and several of our teams have been happy using them."
Blueboat,https://www.thoughtworks.com/radar/platforms/blueboat,Mar-22,Assess,Platforms,https://tinyurl.com/2z76hp2n,"Blueboat  is a multitenant platform for serverless web applications. It leverages the popular V8 JavaScript engine and implements commonly used web application libraries natively in  Rust  for security and performance. You can think of Blueboat as an alternative to  CloudFlare Workers  or  Deno Deploy  but with an important distinction "" you have to operate and manage the underlying infrastructure. That said, we recommend you carefully assess Blueboat for your on-prem serverless needs."
Bob,https://www.thoughtworks.com/radar/languages-and-frameworks/bob,Mar-22,Trial,Languages & Frameworks,https://tinyurl.com/2ldcejf4,"When building an app with React Native you sometimes find yourself having to create your own modules. For example, we've encountered this need when building a UI component library for a React Native app. Creating such a module project isn't straightforward, and our teams report success using  Bob  to automate this task. Bob provides a CLI to create the scaffolding for different targets. The scaffolding is not limited to core functionality but, optionally, can include example code, linters, build pipeline configuration and other features."
Capacitor,https://www.thoughtworks.com/radar/languages-and-frameworks/capacitor,Mar-22,Assess,Languages & Frameworks,https://tinyurl.com/2zlay556,"We've been debating the merits of cross-platform mobile development tools for nearly as long as we've been publishing the Technology Radar. We first noted a new generation of tools in 2011 when blipping about  cross-mobile platforms . Although we were skeptical of them at first, these tools have been perfected and widely adopted over the years. And nobody can debate the enduring popularity and usefulness of  React Native .  Capacitor  is the latest generation of a line of tools starting with PhoneGap, then renamed to  Apache Cordova . Capacitor is a complete rewrite from Ionic that embraces the  progressive web app  style for stand-alone applications. So far, our developers like that they can address web, iOS and Android applications with a single code base and that they can manage the native platforms separately with access to the native APIs when necessary. Capacitor offers an alternative to React Native, which has many years of cross-platform experience behind it."
CDKTF,https://www.thoughtworks.com/radar/tools/cdktf,Mar-22,Assess,Tools,https://tinyurl.com/2gosnhtp,"By now many organizations have created sprawling landscapes of services in the cloud. Of course, this is only possible when using  infrastructure as code  and mature tooling. We still like  Terraform , not the least because of its rich and growing ecosystem. However, the lack of abstractions in HCL, Terraform's default configuration language, effectively creates a glass ceiling. Using  Terragrunt  pushes that up a bit further, but more and more often our teams find themselves longing for the abstractions afforded by modern programming languages.  Cloud Development Kit for Terraform (CDKTF) , which resulted from a collaboration between AWS's  CDK  team and Hashicorp, makes it possible for teams to use several programming languages, including TypeScript and Java, to define and provision infrastructure. With this approach it follows the lead of  Pulumi  while remaining in the Terraform ecosystem. We've had good experiences with CDKTF but have decided to keep it in the Assess ring until it moves out of beta."
cert-manager,https://www.thoughtworks.com/radar/tools/cert-manager,Mar-22,Trial,Tools,https://tinyurl.com/2odqjypm,"cert-manager  is a tool to manage your X.509 certificates within your  Kubernetes  cluster. It models certificates and issuers as first-class resource types and provides certificates as a service securely to developers and applications working within the Kubernetes cluster. The obvious choice when using the Kubernetes default ingress controller, it's also recommended for others and much preferred over hand-rolling your own certificate management. Several of our teams have been using cert-manager extensively, and we've also found that its usability has much improved in the past few months."
Chrome Recorder panel,https://www.thoughtworks.com/radar/tools/chrome-recorder-panel,Mar-22,Assess,Tools,https://tinyurl.com/2mrqad2u,"Chrome Recorder panel  is a preview feature in Google Chrome 97 that allows for simple record and playback of user journeys. While this definitely isn't a new idea, the way in which it is integrated into Chrome allows for quick creation, editing and running of scripts. The panel also integrates nicely with the performance panel, which makes getting repeated consistent feedback on page performance easier. While record/playback style testing always needs to be used with care in order to avoid brittle tests, we think this preview feature is worth assessing, especially if you're already using the Chrome Performance panel to measure your pages."
CircleCI,https://www.thoughtworks.com/radar/platforms/circleci,Mar-22,Trial,Platforms,https://tinyurl.com/2p4ppyzw,"Many of our teams choose  CircleCI  for their continuous integration needs, and they appreciate its ability to run complex pipelines efficiently. The CircleCI developers continue to add new features with CircleCI, now in version 3.0.  Orbs  and  executors  were called out by our teams as being particularly useful. Orbs are reusable snippets of code that automate repeated processes, speed up project setup and make it easy to integrate with third-party tools. The wide variety of executor types provides flexibility to set up jobs in Docker, Linux, macOS or Windows VMs."
Cloud Carbon Footprint,https://www.thoughtworks.com/radar/tools/cloud-carbon-footprint,Mar-22,Trial,Tools,https://tinyurl.com/2jsfnboa,"Cloud Carbon Footprint  (CCF) is an open-source tool that uses cloud APIs to provide visualizations of estimated carbon emissions based on usage across AWS, GCP and Azure. The Thoughtworks team has  successfully used the tool  with several organizations, including energy technology companies, retailers, digital service providers and companies that use AI. Cloud platform providers realize that it's important to help their customers understand the carbon impact of using their services, so they've begun to build similar functionality themselves. Because CCF is cloud agnostic, it allows users to view energy usage and carbon emissions for multiple cloud providers in one place, while translating carbon footprints into real-world impact such as flights or trees planted."
Cloudflare Pages,https://www.thoughtworks.com/radar/platforms/cloudflare-pages,Mar-22,Assess,Platforms,https://tinyurl.com/2fnajlll,"When  Cloudflare Workers  was released, we highlighted it as an early function as a service (FaaS) for edge computing with an interesting implementation. The release of  Cloudflare Pages  last April didn't feel as noteworthy, because Pages is just one in a class of many Git-backed site-hosting solutions. It did have continuous previews, a useful feature not found in most alternatives. Now, though, Cloudflare has more tightly  integrated Workers and Pages , creating a fully integrated  Jamstack  solution running on the CDN. The inclusion of a key-value store and a strongly consistent coordination primitive further enhance the attractiveness of the new version of Cloudflare Pages."
Collibra,https://www.thoughtworks.com/radar/platforms/collibra,Mar-22,Assess,Platforms,https://tinyurl.com/2hb4xw2x,"In the increasingly crowded space that is the enterprise data catalog market, our teams have enjoyed working with Collibra. They liked the deployment flexibility of either a SaaS or self-hosted instance, the wide range of functionality included out of the box, including data governance, lineage, quality and observability. Users also have the option to use a smaller subset of capabilities required by a more decentralized approach such as a data mesh. The real feather in its cap has been their often overlooked customer support, which our people have found to be collaborative and supportive. Of course, there's a tension between simple data catalogs and more full featured enterprise platforms, but so far the teams using it are happy with how Collibra has supported their needs."
Conftest,https://www.thoughtworks.com/radar/tools/conftest,Mar-22,Trial,Tools,https://tinyurl.com/2nsgwcul,"Conftest  is a tool for writing tests against structured configuration data. It relies on the  Rego language  from  Open Policy Agent  to write tests for  Kubernetes  configurations,  Tekton  pipeline definitions or even  Terraform  plans. We've had great experiences with Conftest "" and its shallow learning curve. With fast feedback from tests, our teams iterate quickly and safely on configuration changes to Kubernetes."
Couchbase,https://www.thoughtworks.com/radar/platforms/couchbase,Mar-22,Trial,Platforms,https://tinyurl.com/2n2eyvwr,"When we originally blipped  Couchbase  in 2013, it was seen primarily as a persistent cache that evolved from a merger of  Membase  and  CouchDB . Since then, it has undergone steady improvement and an ecosystem of related tools and commercial offerings has grown up around it. Among the additions to the product suite are Couchbase Mobile and the Couchbase Sync Gateway. These features work together to keep persistent data on edge devices up-to-date even when the device is offline for periods of time due to intermittent connectivity. As these devices proliferate, we see increasing need for embedded persistence that continues to work whether or not the device happens to be connected. Recently, one of our teams evaluated Couchbase for its offline sync capability and found that this off-the-shelf capability saved them considerable effort that they otherwise would have had to invest themselves."
CycloneDX,https://www.thoughtworks.com/radar/platforms/cyclonedx,Mar-22,Assess,Platforms,https://tinyurl.com/2n55nl8d,"CycloneDX  is a standard for describing a machine-readable  Software Bill of Materials  (SBOM). As software and compute fabrics increase in complexity,  software  becomes harder to define. Originating with OWASP, CycloneDX improves on the older SPDX standard with a broader definition that extends beyond the local machine dependencies to include runtime service dependencies. You'll also find implementations in several languages, an  ecosystem  of supporting integrations and a  CLI tool  that lets you analyze and change SBOMs with appropriate signing and verification."
Data mesh,https://www.thoughtworks.com/radar/techniques/data-mesh,Mar-22,Trial,Techniques,https://tinyurl.com/2nz7ew4x,"Data mesh  is a  decentralized  organizational and technical approach in sharing, accessing and managing data for analytics and ML. Its objective is to create a  sociotechnical  approach that scales out getting value from data as the organization's complexity grows and as the use cases for data proliferate and the sources of data diversify. Essentially, it creates a  responsible  data-sharing model that is in step with organizational growth and continuous change. In our experience, interest in the application of data mesh has grown tremendously. The approach has inspired many organizations to embrace its adoption and technology providers to repurpose their existing technologies for a mesh deployment. Despite the great interest and growing experience in data mesh, its implementations face high cost of integration. Moreover, its adoption remains limited to sections of larger organizations and technology vendors are distracting the organizations from the hard  socio  aspects of data mesh "" decentralized data ownership and a federated governance operating model."
Definition of production readiness,https://www.thoughtworks.com/radar/techniques/definition-of-production-readiness,Mar-22,Trial,Techniques,https://tinyurl.com/2ohuwn22,"In an organization that practices the ""you build it, you run it"" principle, a  definition of production readiness  (DPR) is a useful technique to support teams in assessing and preparing the operational readiness of new services. Implemented as a checklist or a template, a DPR gives teams guidance on what to think about and consider before they bring a new service into production. While DPRs do not define specific service-level objectives (SLOs) to fulfill (those would be hard to define one-size-fits-all), they remind teams what categories of SLOs to think of, what organizational standards to comply with and what documentation is required. DPRs provide a source of input that teams turn into respective product-specific requirements around, for example, observability and reliability, to feed into their product backlogs."
Documentation quadrants,https://www.thoughtworks.com/radar/techniques/documentation-quadrants,Mar-22,Trial,Techniques,https://tinyurl.com/2p5cmff4,"Writing good documentation is an overlooked aspect of software development that is often left to the last minute and done in a haphazard way. Some of our teams have found  documentation quadrants  a handy way to ensure the right artifacts are being produced. This technique classifies artifacts along two axes: The first axis relates to the nature of the information, practical or theoretical; the second axis describes the context in which the artifact is used, studying or working. This defines four quadrants in which artifacts such as tutorials, how-to guides or reference pages can be placed and understood. This classification system not only ensures that critical artifacts aren't overlooked but also guides the presentation of the content. We've found this particularly useful for creating onboarding documentation that brings developers up to speed quickly when they join a new team."
Embeddinghub,https://www.thoughtworks.com/radar/platforms/embeddinghub,Mar-22,Assess,Platforms,https://tinyurl.com/2opylhrf,"Embeddinghub  is a vector database for machine-learning  embeddings , and quite similar to  Milvus . However, with out-of-the-box support for approximate nearest neighbor operations, partitioning, versioning and access control, we recommend you assess Embeddinghub for your embedding vector use cases."
Flutter-Unity widget,https://www.thoughtworks.com/radar/languages-and-frameworks/flutter-unity-widget,Mar-22,Trial,Languages & Frameworks,https://tinyurl.com/2mxxknyx,"Flutter is increasingly popular for building cross-platform mobile apps, and Unity is great for building AR/VR experiences. A key piece in the puzzle for integrating Unity and Flutter is the  Flutter-Unity widget , which allows embedding Unity apps inside Flutter widgets. One of the key capabilities the widget offers is bi-directional communication between Flutter and Unity. We've found its performance to be pretty good as well, and we're looking forward to leveraging Unity in more Flutter apps."
Four key metrics,https://www.thoughtworks.com/radar/techniques/four-key-metrics,Mar-22,Adopt,Techniques,https://tinyurl.com/2fvjg7es,"To measure software delivery performance, more and more organizations are defaulting to the  four key metrics  as defined by the  DORA research  program: change lead time, deployment frequency, mean time to restore (MTTR) and change fail percentage. This research and its statistical analysis have shown a clear link between high-delivery performance and these metrics; they provide a great leading indicator for how a delivery organization as a whole is doing."
GitHub Actions,https://www.thoughtworks.com/radar/platforms/github-actions,Mar-22,Trial,Platforms,https://tinyurl.com/2qes3sq5,"GitHub Actions  has grown considerably last year. It has proven that it can take on more complex workflows and call other actions in composite actions among other things. It still has some shortcomings, though, such as its inability to re-trigger a single job of a workflow. Although the ecosystem in the  GitHub Marketplace  has its obvious advantages, giving third-party GitHub Actions access to your build pipeline risks sharing secrets in insecure ways (we recommend following GitHub's advice on  security hardening ). However, the convenience of creating your build workflow directly in GitHub next to your source code combined with the ability to run GitHub Actions locally using open-source tools such as  act  is a compelling option that has facilitated setup and onboarding of our teams."
GitHub Codespaces,https://www.thoughtworks.com/radar/tools/github-codespaces,Mar-22,Assess,Tools,https://tinyurl.com/2prd6qmb,"GitHub Codespaces  allows developers to create  development environments in the cloud  and access them through an IDE as though the environment were local. GitHub isn't the first company to implement this idea; we previously blipped about  Gitpod . We like that Codespaces allows environments to be standardized by using dotfiles configuration, making it quicker to onboard new team members, and that they offer VMs with up to 32 cores and 64GB memory. These VMs can be spun up in under ten seconds, potentially offering environments more powerful than a developer laptop."
GitLab CI/CD,https://www.thoughtworks.com/radar/platforms/gitlab-ci-cd,Mar-22,Trial,Platforms,https://tinyurl.com/2oo33fja,"If you're using  GitLab  to manage your software delivery, you should also look at  GitLab CI/CD  for your continuous integration and continuous delivery needs. We've found it especially useful when used with on-premise GitLab and self-hosted runners, as this combination gets around authorization headaches often caused by using a cloud-based solution. Self-hosted runners can be fully configured for your purposes with the right OS and dependencies installed, and as a result pipelines can run much faster than using a cloud-provisioned runner that needs to be configured each time."
Google BigQuery ML,https://www.thoughtworks.com/radar/platforms/google-bigquery-ml,Mar-22,Trial,Platforms,https://tinyurl.com/2dtwoh4b,"Since we last blipped about  Google BigQuery ML , more sophisticated models such as Deep Neural Networks and AutoML Tables have been added by connecting BigQuery ML with TensorFlow and Vertex AI as its backend. BigQuery has also introduced support for time series forecasting. One of our concerns previously was  explainability . Earlier this year,  BigQuery Explainable AI  was announced for general availability, taking a step in addressing this. We can also export BigQuery ML models to Cloud Storage as a Tensorflow SavedModel and use them for online prediction. There remain trade-offs like ease of ""continuous delivery for machine learning"" but with its low barrier to entry, BigQuery ML remains an attractive option, particularly when the data already resides in BigQuery."
Google Cloud Dataflow,https://www.thoughtworks.com/radar/platforms/google-cloud-dataflow,Mar-22,Trial,Platforms,https://tinyurl.com/2l5nhnpg,"Google Cloud Dataflow  is a cloud-based data-processing service for both batch and real-time data-streaming applications. Our teams are using Dataflow to create processing pipelines for integrating, preparing and analyzing large data sets, with  Apache Beam s unified programming model on top to ease manageability. We first featured Dataflow in 2018, and its stability, performance and rich feature set make us confident to move it to Trial in this edition of the Radar."
GoReleaser,https://www.thoughtworks.com/radar/tools/goreleaser,Mar-22,Assess,Tools,https://tinyurl.com/2za7jeuw,"GoReleaser  is a tool that automates the process of building and releasing a Go project for different architectures via multiple repositories and channels, a common need for Go projects targeting different platforms. You run the tool either from your local machine or via CI, with the tool available via several CI services thus minimizing set-up and maintenance. GoReleaser takes care of build, packaging, publishing and announcement of each release and supports different combinations of package format, package repository and source control. Although it's been around for a few years, we're surprised that more teams are not using it. If you're regularly releasing a Go codebase, this tool is worth assessing."
Grype,https://www.thoughtworks.com/radar/tools/grype,Mar-22,Assess,Tools,https://tinyurl.com/2htpeecj,"Securing the software supply chain has become a commonplace concern among delivery teams, a concern that is reflected by the growing number of new tools in this space.  Grype  is a new lightweight vulnerability scanning tool for Docker and OCI images. It can be installed as a binary, can scan images before they're pushed to a registry, and it doesn't require a Docker daemon to run on your build agents. Grype comes from the same team that is behind  Syft , which generates  SBOMs  in various formats from container images. Grype can consume the SBOM output of Syft to scan for vulnerabilities."
Inclusive design,https://www.thoughtworks.com/radar/techniques/inclusive-design,Mar-22,Assess,Techniques,https://tinyurl.com/2lo7qdjk,"We recommend organizations assess  inclusive design  as a way of making sure accessibility is treated as a first-class requirement. All too often requirements around accessibility and inclusivity are ignored until just before, if not just after, the release of software. The cheapest and simplest way to accommodate these requirements, while also providing early feedback to teams, is to incorporate them fully into the development process. In the past, we've highlighted techniques that perform a ""shift-left"" for security and cross-functional requirements; one perspective on this technique is that it achieves the same goal for accessibility."
Java 17,https://www.thoughtworks.com/radar/languages-and-frameworks/java-17,Mar-22,Assess,Languages & Frameworks,https://tinyurl.com/2eo9jh3c,"We don't routinely feature new versions of languages, but we wanted to highlight the new long-term support (LTS) version of Java, version 17. While there are promising new features, such as the preview of  pattern matching , it's the switch to the new LTS process that should interest many organizations. We recommend organizations assess new releases of Java as and when they become available, making sure they adopt new features and versions as appropriate. Surprisingly many organizations do not routinely adopt newer versions of languages even though regular updates help keep things small and manageable. Hopefully the new LTS process, alongside organizations moving to regular updates, will help avoid the ""too expensive to update"" trap that ends with production software running on an end-of-life version of Java."
jc,https://www.thoughtworks.com/radar/tools/jc,Mar-22,Assess,Tools,https://tinyurl.com/2nyhlb6j,"In our previous Radar, we placed  modern Unix commands  in Assess. One of the commands featured in that collection of tools was jq, effectively a sed for JSON.  jc  performs a related task: it takes the output of common Unix commands and parses the output into JSON. The two commands together provide a bridge between the Unix CLI world and the raft of libraries and tools that operate on JSON. When writing  simple  scripts, for example, for software deployment or gathering troubleshooting information, having the myriad of different Unix command output formats mapped into well-defined JSON can save a lot of time and effort. As with jq, you need to make sure the command is available. It can be installed from many of the well-known package repositories."
Jetpack Glance,https://www.thoughtworks.com/radar/languages-and-frameworks/jetpack-glance,Mar-22,Assess,Languages & Frameworks,https://tinyurl.com/2kd3qkzu,"Android 12 brought significant changes to app widgets that have improved the user and developer experience. For writing regular Android apps, we've expressed our preference for  Jetpack Compose  as a modern way of building native user interfaces. Now, with  Jetpack Glance , which is built on top of the Compose runtime, developers can use similar declarative Kotlin APIs for writing widgets. Recently, Glance has been  extended  to support Tiles for Wear OS."
kube-score,https://www.thoughtworks.com/radar/tools/kube-score,Mar-22,Trial,Tools,https://tinyurl.com/2l8cqw9m,"kube-score  is a tool that does static code analysis of your Kubernetes object definitions. The output is a list of recommendations for what you can improve to make your application more secure and resilient. It has a list of  predefined checks  which includes best practices such as running containers with non-root privileges and correctly specifying resource limits. It's been around for some time, and we've used it in a few projects as part of a CD pipeline for Kubernetes manifests. A major drawback of kube-score is that you can't add custom policies. We typically supplement it with tools like  Conftest  in these cases."
Lighthouse,https://www.thoughtworks.com/radar/tools/lighthouse,Mar-22,Trial,Tools,https://tinyurl.com/2lmvbsc5,"Lighthouse  is a tool written by Google to assess web applications and web pages, collecting performance metrics and insights on good development practices. We've long advocated for  performance testing as a first-class citizen , and the additions to Lighthouse that we mentioned five years ago certainly helped with that. Our thinking around  architectural fitness functions  created strong motivation for tools such as Lighthouse to be run in build pipelines. With the introduction of  Lighthouse CI , it has become easier than ever to include Lighthouse in pipelines managed by  various tools ."
Metaflow,https://www.thoughtworks.com/radar/tools/metaflow,Mar-22,Trial,Tools,https://tinyurl.com/2yuf3fhy,"Metaflow  is a user-friendly Python library and back-end service that helps data scientists and engineers build and manage production-ready data processing, ML training and inference workflows. Metaflow provides Python APIs that structure the code as a directed graph of steps. Each step can be decorated with flexible configurations such as the required compute and storage resources. Code and data artifacts for each step's run (aka task) are stored and can be retrieved either for future runs or the next steps in the flow, enabling you to recover from errors, repeat runs and track versions of models and their dependencies across multiple runs."
npm workspaces,https://www.thoughtworks.com/radar/languages-and-frameworks/npm-workspaces,Mar-22,Assess,Languages & Frameworks,https://tinyurl.com/2llw6yzv,"While many tools support multipackage development in the node.js world, npm 7 adds direct support with the addition of  npm workspaces . Managing related packages together facilitates development, allowing you, for example, to store multiple related libraries in a single repo. With npm workspaces, once you add a configuration in a top-level package.json file to refer to one or more nested package.json files, commands like  npm install  work across multiple packages, symlinking the dependent source packages into the root node_modules directory. Other npm commands are also now workspace aware, allowing you, for example, to execute  npm run  and  npm test  commands across multiple packages with a single command. Having that flexibility out of the box decreases the need for some teams to reach for another package manager."
NUKE,https://www.thoughtworks.com/radar/tools/nuke,Mar-22,Trial,Tools,https://tinyurl.com/2pc58tlu,"NUKE  is a build system for .NET and an alternative to either the traditional MSBuild or  Cake  and  Fake  which we've featured previously in the Radar. NUKE represents build instructions as a C# DSL, making it easy to learn and with good IDE support. In our experience, NUKE made it really simple to build automation for .NET projects. We like the accurate static code checks and hints. We also like that we can use any NuGet package seamlessly and that the automation code can be compiled to avoid problems at runtime. NUKE isn't new, but its novel approach "" using a C# DSL "" and our positive overall experience prompted us to include it here."
Operator pattern for nonclustered resources,https://www.thoughtworks.com/radar/techniques/operator-pattern-for-nonclustered-resources,Mar-22,Assess,Techniques,https://tinyurl.com/2n7hlt3u,"We're continuing to see increasing use of the  Kubernetes Operator  pattern for purposes other than managing applications deployed on the cluster. Using the  Operator pattern for nonclustered resources  takes advantage of custom resource definitions and the event-driven scheduling mechanism implemented in the Kubernetes control plane to manage activities that are related to yet outside of the cluster. This technique builds on the idea of  Kube-managed cloud services  and extends it to other activities, such as continuous deployment or reacting to changes in external repositories. One advantage of this technique over a purpose-built tool is that it opens up a wide range of tools that either come with Kubernetes or are part of the wider ecosystem. You can use commands such as diff, dry-run or apply to interact with the operator's custom resources. Kube's scheduling mechanism makes development easier by eliminating the need to orchestrate activities in the proper order. Open-source tools such as  Crossplane ,  Flux  and  Argo CD  take advantage of this technique, and we expect to see more of these emerge over time. Although these tools have their use cases, we're also starting to see the inevitable misuse and overuse of this technique and need to repeat some old advice: Just because you  can  do something with a tool doesn't mean you  should . Be sure to rule out simpler, conventional approaches before creating a custom resource definition and taking on the complexity that comes with this approach."
Pactflow,https://www.thoughtworks.com/radar/tools/pactflow,Mar-22,Trial,Tools,https://tinyurl.com/2lxqbbhc,"We've used  Pact  for contract testing long enough to see some of the complexity that comes with scale. Some of our teams have successfully used  Pactflow  to reduce that friction. Pactflow runs both as software as a service and as an on-prem deployment with the same features as the SaaS offering, and it adds improved usability, security and auditing on top of the open-source Pact Broker offering. We've been pleased with our use so far and are happy to see continued effort to remove some of the overhead of managing contract testing at scale."
Podman,https://www.thoughtworks.com/radar/tools/podman,Mar-22,Trial,Tools,https://tinyurl.com/2mx46z5b,"As an alternative to  Docker ,  Podman  has been validated by many of our teams. Podman introduces a daemonless engine for managing and running containers which is an interesting approach in comparison to what Docker does. Additionally, Podman can be easily run as a normal user  without requiring root privileges , which reduces the attack surface. By using either  Open Container Initiative  (OCI) images built by  Buildah  or Docker images, Podman can be adapted to most container use cases. Apart from some compatibility issues with macOS, our team has had generally good experiences with Podman on Linux distributions."
Production data in test environments,https://www.thoughtworks.com/radar/techniques/production-data-in-test-environments,Mar-22,Hold,Techniques,https://tinyurl.com/2z8lshfn,"We continue to perceive  production data in test environments  as an area for concern. Firstly, many examples of this have resulted in reputational damage, for example, where an incorrect alert has been sent from a test system to an entire client population. Secondly, the level of security, specifically around protection of private data, tends to be less for test systems. There is little point in having elaborate controls around access to production data if that data is copied to a test database that can be accessed by every developer and QA. Although you  can  obfuscate the data, this tends to be applied only to specific fields, for example, credit card numbers. Finally, copying production data to test systems can break privacy laws, for example, where test systems are hosted or accessed from a different country or region. This last scenario is especially problematic with complex cloud deployments. Fake data is a safer approach, and tools exist to help in its creation. We do recognize there are reasons for  specific  elements of production data to be copied, for example, in the reproduction of bugs or for training of specific ML models. Here our advice is to proceed with caution."
Remix,https://www.thoughtworks.com/radar/languages-and-frameworks/remix,Mar-22,Assess,Languages & Frameworks,https://tinyurl.com/2j6l4gu2,"We witnessed the migration from server-side rendering website to single-page application in the browser, now the pendulum of web development seems to swing back to the middle.  Remix  is one such example. It's a full-stack JavaScript framework. It provides fast page loads by leveraging distributed systems and native browsers instead of clumsy static builds. It has made some optimizations on nested routing and page loading, which makes page rendering seem especially fast. Many people will compare Remix with  Next.js , which is similarly positioned. We're glad to see such frameworks cleverly combining the browser run time with the server run time to provide a better user experience."
Rethinking remote standups,https://www.thoughtworks.com/radar/techniques/rethinking-remote-standups,Mar-22,Trial,Techniques,https://tinyurl.com/2ewpln87,"The term  standup  originated from the idea of standing up during this daily sync meeting, with the goal of making it short. It's a common principle many teams try to abide by in their standups: keep it crisp and to the point. But we're now seeing teams challenge that principle and  rethinking remote standups . When co-located, there are lots of opportunities during the rest of the day to sync up with each other spontaneously, as a complement to the short standup. Remotely, some of our teams are now experimenting with a longer meeting format, similar to what the folks at Honeycomb call a “ meandering team sync .”"
Reusable workflows in Github Actions,https://www.thoughtworks.com/radar/platforms/reusable-workflows-in-github-actions,Mar-22,Trial,Platforms,https://tinyurl.com/2p6uyngt,"We've seen increased interest in  GitHub Actions  since we first blipped it two Radars ago. With the release of  reusable workflows , GitHub continues to evolve the product in a way that addresses some of its early shortcomings.  Reusable workflows in Github Actions  bring modularity to pipeline design, allowing parameterized reuse even across repositories (as long as the workflow repository is public). They support explicit passing of confidential values as secrets and can pass outputs to the calling job. With a few lines of YAML, GitHub Actions now gives you the type of flexibility you see with  CircleCI  Orbs or  Azure Pipeline Templates , but without having to leave GitHub as a platform."
Sealed Secrets,https://www.thoughtworks.com/radar/platforms/sealed-secrets,Mar-22,Trial,Platforms,https://tinyurl.com/2jwbvze5,"Kubernetes  natively supports a key-value object known as a secret. However, by default, Kubernetes secrets aren't really secret. They're handled separately from other key-value data so that precautions or access control can be applied separately. There is support for encrypting secrets before they are stored in  etcd , but the secrets start out as plain text fields in configuration files.  Sealed Secrets  is a combination operator and command-line utility that uses asymmetric keys to encrypt secrets so that they can only be decrypted by the controller in the cluster. This process ensures that the secrets won't be compromised while they sit in the configuration files that define a Kubernetes deployment. Once encrypted, these files can be safely shared or stored alongside other deployment artifacts."
Service mesh without sidecar,https://www.thoughtworks.com/radar/techniques/service-mesh-without-sidecar,Mar-22,Assess,Techniques,https://tinyurl.com/2pzrumau,"Service mesh  is usually implemented as a reverse-proxy process, aka sidecar, deployed alongside each service instance. Although these sidecars are lightweight processes, the overall cost and operational complexity of adopting service mesh increases with every new instance of the service requiring another sidecar. However, with the advancements in  eBPF , we're observing a new  service mesh without sidecar  approach where the functionalities of the mesh are safely pushed down to the OS kernel, thereby enabling services in the same node to communicate transparently via sockets without the need of additional proxies. You can try this with  Cilium service mesh  and simplify the deployment from one proxy-per-service to one proxy-per-node. We're intrigued by the capabilities of eBPF and find this evolution of service mesh to be important to assess."
ShedLock,https://www.thoughtworks.com/radar/languages-and-frameworks/shedlock,Mar-22,Assess,Languages & Frameworks,https://tinyurl.com/2z6s6u64,"Executing a scheduled task once and only once in a cluster of distributed processors is a relatively common requirement. For example, the situation might arise when ingesting a batch of data, sending a notification or performing some regular cleanup activity. But this is a notoriously difficult problem. How does a group of processes cooperate reliably over laggy and less reliable networks? Some kind of locking mechanism is required to coordinate actions across the cluster. Fortunately, a variety of distributed stores can implement a lock. Systems like  ZooKeeper  and  Consul  as well as databases such as DynamoDB or  Couchbase  have the necessary underlying mechanisms to manage consensus across the cluster.  ShedLock  is a small library for taking advantage of these providers in your own Java code, if you're looking to implement your own scheduled tasks. It provides an API for acquiring and releasing locks as well as connectors to a wide variety of lock providers. If you're writing your own distributed tasks but don't want to take on the complexity of an entire orchestration platform like  Kubernetes , ShedLock is worth a look."
Single team remote wall,https://www.thoughtworks.com/radar/techniques/single-team-remote-wall,Mar-22,Adopt,Techniques,https://tinyurl.com/2jp4tb28,"A  single team remote wall  is a simple technique to reintroduce the team wall virtually. We recommend that distributed teams adopt this approach; one of the things we hear from teams who moved to remote working is that they miss having the physical team wall. This was a single place where all the various story cards, tasks, status and progress could be displayed, acting as an information radiator and hub for the team. The wall acted as an integration point with the actual data being stored in different systems. As teams have become remote, they've had to revert to looking into the individual source systems and getting an ""at a glance"" view of a project has become very difficult. While there might be some overhead in keeping this up-to-date, we feel the benefits to the team are worth it. For some teams, updating the physical wall formed part of the daily ""ceremonies"" the team did together, and the same can be done with a remote wall."
skopeo,https://www.thoughtworks.com/radar/tools/skopeo,Mar-22,Assess,Tools,https://tinyurl.com/2qzgb6ba,"skopeo  is a command line utility that performs various operations on container images and image repositories. It doesn't require a user to be root to do most of its operations nor does it require a daemon to be running. It's a useful part of a CI pipeline; we've used it to copy images from one registry to another as we promote the images. It's better than doing a pull and a push as we don't need to store the images locally. It's not a new tool, but it's useful enough and underutilized that we felt it's worth calling it out."
Sourcegraph,https://www.thoughtworks.com/radar/tools/sourcegraph,Mar-22,Trial,Tools,https://tinyurl.com/2hacoxu5,"In our previous Radar, we featured two tools that search and replace code using an abstract syntax tree (AST) representation,  Comby  and  Sourcegraph . Although they share some similarities, they also differ in several ways. Sourcegraph is a commercial tool (with a 10-user free tier). It's particularly suited for searching, navigating or cross-referencing in large codebases, with an emphasis on an interactive developer experience. In contrast, Comby is a lightweight open-source command-line tool for automating repetitive tasks. Because Sourcegraph is a hosted service, it also has the ability to continuously monitor code bases and send alerts when a match occurs. Now that we've gained more experience with Sourcegraph, we decided to move it into the Trial ring to reflect our positive experience "" which doesn't mean that Sourcegraph is better than Comby. Each tool focuses on a different niche."
SpiceDB,https://www.thoughtworks.com/radar/languages-and-frameworks/spicedb,Mar-22,Assess,Languages & Frameworks,https://tinyurl.com/2drje4qr,"SpiceDB  is a database system, inspired by Google's  Zanzibar , for managing application permissions. With SpiceDB, you create a schema to model the permissions requirements and use the  client library  to apply the schema to one of the  supported databases , insert data and query to efficiently answer questions like ""Does this user have access to this resource?"" or even the inverse ""What are all the resources this user has access to?"" We usually advocate separating the authorization policies from code, but SpiceDB takes it a step further by separating data from the policy and storing it as a graph to efficiently answer authorization queries. Because of this separation, you have to ensure that the changes in your application's primary data store are reflected in SpiceDB. Among other Zanzibar-inspired implementations, we find SpiceDB to be an interesting framework to assess for your authorization needs."
sqlc,https://www.thoughtworks.com/radar/languages-and-frameworks/sqlc,Mar-22,Assess,Languages & Frameworks,https://tinyurl.com/2qv67bju,"sqlc  is a compiler that generates type-safe idiomatic Go code from SQL. Unlike other approaches based on object-relational mapping (ORM), you continue to write plain SQL for your needs. Once invoked, sqlc checks the correctness of the SQL and generates performant Go code, which can be directly called from the rest of the application. With stable support for both PostgreSQL and MySQL, sqlc is worth a look, and we encourage you to assess it."
SQLFluff,https://www.thoughtworks.com/radar/tools/sqlfluff,Mar-22,Assess,Tools,https://tinyurl.com/2lcmw99p,"While linting is an ancient practice in the software world, it's had slower adoption in the data world.  SQLFluff  is a cross-dialect SQL linter written in Python that ships with a simple command line interface (CLI), making it easy to incorporate into a CI/CD pipeline. If you're comfortable with the default conventions, then SQLFluff works without any additional configuration after installing it and will enforce a strongly opinionated set of formatting standards; setting your own conventions involves adding a configuration dotfile. The CLI can automatically fix certain classes of violations that involve formatting concerns like whitespace or uppercasing of keywords. SQLFluff is still new, but we're excited to see SQL getting some attention in the linting world."
SwiftUI,https://www.thoughtworks.com/radar/languages-and-frameworks/swiftui,Mar-22,Adopt,Languages & Frameworks,https://tinyurl.com/2julc547,"When Apple introduced  SwiftUI  a few years ago, it was a big step forward for implementing user interfaces on all kinds of devices made by Apple. From the beginning, we liked the declarative, code-centric approach and the reactive programming model provided by  Combine . We did notice, though, that writing a lot of view tests, which you still need with a model""view""viewmodel (MVVM) pattern, was not really sensible with the XCUITest automation framework provided by Apple. This gap has been closed by  ViewInspector . A final hurdle was the minimum OS version required. At the time of release, only the very latest versions of iOS and macOS could run applications written with SwiftUI, but because of Apple's regular cadence of updates, SwiftUI apps can now run on practically all versions of macOS and iOS that receive security updates."
Syft,https://www.thoughtworks.com/radar/tools/syft,Mar-22,Trial,Tools,https://tinyurl.com/2gwt89fl,"One of the key elements of improving ""supply chain security"" is using a  Software Bill of Materials (SBOM) , which is why publishing an SBOM along with the software artifact is increasingly important.  Syft  is a CLI tool and Go library for generating an SBOM from container images and file systems. It can generate the SBOM output in multiple formats, including JSON,  CycloneDX  and SPDX. The SBOM output of Syft can be used by  Grype  for vulnerability scanning. One way to publish the generated SBOM along with the image is to add it as an attestation using  Cosign . This allows consumers of the image to verify the SBOM and to use it for further analysis."
Tactical forking,https://www.thoughtworks.com/radar/techniques/tactical-forking,Mar-22,Trial,Techniques,https://tinyurl.com/2fjsgay9,"Tactical forking  is a technique that can assist with restructuring or migrating from monolithic codebases to microservices. Specifically, this technique offers one possible alternative to the more common approach of fully modularizing the codebase first, which in many circumstances can take a very long time or be very challenging to achieve. With tactical forking a team can create a new fork of the codebase and use that to address and extract one particular concern or area while deleting the unnecessary code. Use of this technique would likely be just one part of a longer-term plan for the overall monolith."
Temporal,https://www.thoughtworks.com/radar/platforms/temporal,Mar-22,Assess,Platforms,https://tinyurl.com/2zdg5kag,"Temporal  is a platform for developing long-running workflows, particularly for microservice architectures. A fork of Uber's previous OSS  Cadence  project, it has an event-sourcing model for long-running workflows so they can survive process/machine crashes. Although we don't recommend using distributed transactions in microservice architectures, if you do need to implement them or long-running  Sagas , you may want to look at Temporal."
Terraform Validator,https://www.thoughtworks.com/radar/tools/terraform-validator,Mar-22,Assess,Tools,https://tinyurl.com/2ggqyjd7,"Organizations that have adopted  infrastructure as code  and self-service infrastructure platforms are looking for ways to give teams a maximum of autonomy while still enforcing good security practices and organizational policies. We've highlighted  tfsec  before and are moving it into the Adopt category in this Radar. For teams working on GCP,  Terraform Validator  could be an option when creating a policy library, a set of constraints that are checked against Terraform configurations."
Testcontainers,https://www.thoughtworks.com/radar/languages-and-frameworks/testcontainers,Mar-22,Adopt,Languages & Frameworks,https://tinyurl.com/2ogz3kkt,"We've had enough experience with  Testcontainers  that we think it's a useful default option for creating a reliable environment for running tests. It's a library, ported to  multiple languages , that Dockerizes common test dependencies "" including various types of databases, queuing technologies, cloud services and UI testing dependencies like web browsers "" with the ability to run custom Dockerfiles when needed. It works well with test frameworks like JUnit, is flexible enough to let users manage the container lifecycle and advanced networking and quickly sets up an integrated test environment. Our teams have consistently found this library of programmable, lightweight and disposable containers to make functional tests more reliable."
tfsec,https://www.thoughtworks.com/radar/tools/tfsec,Mar-22,Adopt,Tools,https://tinyurl.com/2jzl8bxl,"For our projects using  Terraform ,  tfsec  has quickly become a default static analysis tool to detect potential security risks. It's easy to integrate into a CI pipeline and has a growing library of checks against all of the major cloud providers and platforms like Kubernetes. Given its ease of use, we believe tfsec could be a good addition to any Terraform project."
The Composable Architecture,https://www.thoughtworks.com/radar/languages-and-frameworks/the-composable-architecture,Mar-22,Assess,Languages & Frameworks,https://tinyurl.com/2ps4d3fa,"Developing apps for iOS has become more streamlined over time, and  SwiftUI  moving into Adopt is a sign of that. Going beyond the general nature of SwiftUI and other common frameworks,  The Composable Architecture  (TCA) is both a library and an architectural style for building apps. It was designed over the course of a series of videos, and the authors state that they had composition, testing and ergonomics in mind, building on a foundation of ideas from The Elm Architecture and Redux. As expected, the narrow scope and opinionatedness is both a strength and a weakness of TCA. We feel that teams who don't have a lot of expertise in writing iOS apps, which are often teams who may be looking after multiple related codebases with different tech stacks, stand to benefit the most from using an opinionated framework like TCA, and we like the opinions expressed in TCA."
The streaming data warehouse,https://www.thoughtworks.com/radar/techniques/the-streaming-data-warehouse,Mar-22,Assess,Techniques,https://tinyurl.com/2l5qfrbp,"The need to respond quickly to customer insights has driven increasing adoption of event-driven architectures and stream processing. Frameworks such as  Spark ,  Flink  or  Kafka Streams  offer a paradigm where simple event consumers and producers can cooperate in complex networks to deliver real-time insights. But this programming style takes time and effort to master and when implemented as single-point applications, it lacks interoperability. Making stream processing work universally on a large scale can require a significant engineering investment. Now, a new crop of tools is emerging that offers the benefits of stream processing to a wider, established group of developers who are comfortable using SQL to implement analytics. Standardizing on SQL as the universal streaming language lowers the barrier for implementing streaming data applications. Tools like  ksqlDB  and  Materialize  help transform these separate applications into unified platforms. Taken together, a collection of SQL-based streaming applications across an enterprise might constitute a  streaming data warehouse ."
Transitional architecture,https://www.thoughtworks.com/radar/techniques/transitional-architecture,Mar-22,Trial,Techniques,https://tinyurl.com/2kfbz8py,"A  transitional architecture  is a useful practice used when replacing legacy systems. Much like scaffolding might be built, reconfigured and finally removed during construction or renovation of a building, you often need interim architectural steps during legacy displacement. Transitional architectures will be removed or replaced later on, but they're not just throwaway work given the important role they play in reducing risk and allowing a difficult problem to be broken into smaller steps. Thus they help with avoiding the trap of defaulting to a ""big bang"" legacy replacement approach, because you cannot make smaller interim steps line up with a final architectural vision. Care is needed to make sure the architectural ""scaffolding"" is eventually removed, lest it just become technical debt later on."
Typesense,https://www.thoughtworks.com/radar/tools/typesense,Mar-22,Assess,Tools,https://tinyurl.com/2gwpjujl,"Typesense  is a fast, typo-tolerant text search engine. For use cases with large volumes of data, Elasticsearch might still be a good option as it provides a horizontally scalable disk-based search solution. However, if you're building a latency-sensitive search application with a search index size that can fit in memory, Typesense is a powerful alternative and another option to evaluate alongside tools such as  Meilisearch ."
VerneMQ,https://www.thoughtworks.com/radar/platforms/vernemq,Mar-22,Trial,Platforms,https://tinyurl.com/2msdccdu,"VerneMQ  is an open-source, high-performance, distributed MQTT broker. We've blipped other MQTT brokers in the past like  Mosquitto  and  EMQ . Like EMQ and RabbitMQ, VerneMQ is also based on Erlang/OTP which makes it highly scalable. It scales horizontally and vertically on commodity hardware to support a high number of concurrent publishers and consumers while maintaining low latency and fault tolerance. In our internal benchmarks, we've been able to achieve a few million concurrent connections in a single cluster. While it's not new, we've used it in production for some time now, and it has worked well for us."
Volta,https://www.thoughtworks.com/radar/tools/volta,Mar-22,Trial,Tools,https://tinyurl.com/2ealwdpf,"When working on multiple JavaScript codebases at the same time, it's often necessary to use different versions of Node and other JavaScript tools. On developer machines, these tools are usually installed in the user account or the machine itself, which means a solution is needed to switch between multiple installations. For Node itself there's nvm, but we want to highlight  Volta  as an alternative that we're seeing in use with our teams. Volta has several advantages over using nvm: it can manage other JavaScript tools such as Yarn; it also has the notion of pinning a version of the toolchain on a project basis, which means that developers can simply use the tools in a given code directory without having to worry about manually switching between tool versions "" Volta simply uses shims in the path to select the pinned version. Written in Rust, Volta is fast and ships as a single binary without dependencies."
Vowpal Wabbit,https://www.thoughtworks.com/radar/languages-and-frameworks/vowpal-wabbit,Mar-22,Trial,Languages & Frameworks,https://tinyurl.com/2lygj66t,"Vowpal Wabbit  is a general-purpose machine-learning library. Originally created at Yahoo! Research over a decade ago, Vowpal Wabbit continues to implement new algorithms in reinforcement learning. We want to highlight  Vowpal Wabbit 9.0 , a major release after six years, and encourage you to plan the  migration  as it has several usability improvements, new reductions and bug fixes."
Web Test Runner,https://www.thoughtworks.com/radar/tools/web-test-runner,Mar-22,Trial,Tools,https://tinyurl.com/2l5x5al4,"Web Test Runner  is a package within the  Modern Web  project, which provides several high-quality tools for modern web development with support for web standards like ES Modules. Web Test Runner is a test runner for web applications. One of its advantages compared to existing test runners is that it runs tests in the browser (which could be headless). It supports multiple browser launchers "" including  Puppeteer ,  Playwright , and Selenium "" and uses Mocha by default for the test framework. The tests run pretty fast, and we like that we can open a browser window with devtools when debugging. Web Test Runner internally uses  Web Dev Server  which allows us to leverage its great plugin API for adding customized plugins for our test suite. Modern Web tools look like a very promising developer toolchain, and we're already using it in a few projects."
WebAssembly,https://www.thoughtworks.com/radar/languages-and-frameworks/webassembly,Mar-22,Assess,Languages & Frameworks,https://tinyurl.com/2r2pk6lt,"WebAssembly  (WASM) is the W3C standard that provides capabilities of executing code in the browser. Supported by all major browsers and backward compatible, it's a binary compilation format designed to run in the browser at near native speeds. It opens up the range of languages you can use to write front-end functionality, with early focus on C, C++ and Rust, and it's also an  LLVM compilation  target. When run in the sandbox, it can interact with JavaScript and shares the same permissions and security model. Portability and security are key capabilities that will enable most platforms, including mobile and IoT."
Zig,https://www.thoughtworks.com/radar/languages-and-frameworks/zig,Mar-22,Assess,Languages & Frameworks,https://tinyurl.com/2pab7h3p,"Zig  is a new language that shares many attributes with C but with stronger typing, easier memory allocation, support for namespacing and a host of other features. Its syntax, however, is reminiscent of JavaScript rather than C, which some may hold against it. Zig's aim is to provide a very simple language with straightforward compilation that minimizes side-effects and delivers predictable, easy-to-trace execution. Zig also provides simplified access to LLVM's  cross-compilation capability . Some of our developers have found this feature so viable, they're using Zig as a cross-compiler even though they aren't writing Zig code. Zig is a novel language and worth looking into for applications where C is being considered or already in use as well as for low-level systems applications that require explicit memory manipulation."
